/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.mathang.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the MatHang service. Represents a row in the &quot;minimart_mathang&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.minimart.portlet.mathang.model.impl.MatHangModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.minimart.portlet.mathang.model.impl.MatHangImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see MatHang
 * @see com.minimart.portlet.mathang.model.impl.MatHangImpl
 * @see com.minimart.portlet.mathang.model.impl.MatHangModelImpl
 * @generated
 */
public interface MatHangModel extends BaseModel<MatHang>, StagedGroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a mat hang model instance should use the {@link MatHang} interface instead.
	 */

	/**
	 * Returns the primary key of this mat hang.
	 *
	 * @return the primary key of this mat hang
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this mat hang.
	 *
	 * @param primaryKey the primary key of this mat hang
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this mat hang.
	 *
	 * @return the uuid of this mat hang
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this mat hang.
	 *
	 * @param uuid the uuid of this mat hang
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the mat hang ID of this mat hang.
	 *
	 * @return the mat hang ID of this mat hang
	 */
	public long getMatHangId();

	/**
	 * Sets the mat hang ID of this mat hang.
	 *
	 * @param matHangId the mat hang ID of this mat hang
	 */
	public void setMatHangId(long matHangId);

	/**
	 * Returns the group ID of this mat hang.
	 *
	 * @return the group ID of this mat hang
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this mat hang.
	 *
	 * @param groupId the group ID of this mat hang
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this mat hang.
	 *
	 * @return the company ID of this mat hang
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this mat hang.
	 *
	 * @param companyId the company ID of this mat hang
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this mat hang.
	 *
	 * @return the user ID of this mat hang
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this mat hang.
	 *
	 * @param userId the user ID of this mat hang
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this mat hang.
	 *
	 * @return the user uuid of this mat hang
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this mat hang.
	 *
	 * @param userUuid the user uuid of this mat hang
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this mat hang.
	 *
	 * @return the user name of this mat hang
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this mat hang.
	 *
	 * @param userName the user name of this mat hang
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this mat hang.
	 *
	 * @return the create date of this mat hang
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this mat hang.
	 *
	 * @param createDate the create date of this mat hang
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this mat hang.
	 *
	 * @return the modified date of this mat hang
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this mat hang.
	 *
	 * @param modifiedDate the modified date of this mat hang
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this mat hang.
	 *
	 * @return the name of this mat hang
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this mat hang.
	 *
	 * @param name the name of this mat hang
	 */
	public void setName(String name);

	/**
	 * Returns the code of this mat hang.
	 *
	 * @return the code of this mat hang
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this mat hang.
	 *
	 * @param code the code of this mat hang
	 */
	public void setCode(String code);

	/**
	 * Returns the gia nhap of this mat hang.
	 *
	 * @return the gia nhap of this mat hang
	 */
	public int getGiaNhap();

	/**
	 * Sets the gia nhap of this mat hang.
	 *
	 * @param giaNhap the gia nhap of this mat hang
	 */
	public void setGiaNhap(int giaNhap);

	/**
	 * Returns the status of this mat hang.
	 *
	 * @return the status of this mat hang
	 */
	public int getStatus();

	/**
	 * Sets the status of this mat hang.
	 *
	 * @param status the status of this mat hang
	 */
	public void setStatus(int status);

	/**
	 * Returns the gia ban of this mat hang.
	 *
	 * @return the gia ban of this mat hang
	 */
	public int getGiaBan();

	/**
	 * Sets the gia ban of this mat hang.
	 *
	 * @param giaBan the gia ban of this mat hang
	 */
	public void setGiaBan(int giaBan);

	/**
	 * Returns the gia ban1 of this mat hang.
	 *
	 * @return the gia ban1 of this mat hang
	 */
	public int getGiaBan1();

	/**
	 * Sets the gia ban1 of this mat hang.
	 *
	 * @param giaBan1 the gia ban1 of this mat hang
	 */
	public void setGiaBan1(int giaBan1);

	/**
	 * Returns the gia ban2 of this mat hang.
	 *
	 * @return the gia ban2 of this mat hang
	 */
	public int getGiaBan2();

	/**
	 * Sets the gia ban2 of this mat hang.
	 *
	 * @param giaBan2 the gia ban2 of this mat hang
	 */
	public void setGiaBan2(int giaBan2);

	/**
	 * Returns the gia ban3 of this mat hang.
	 *
	 * @return the gia ban3 of this mat hang
	 */
	public int getGiaBan3();

	/**
	 * Sets the gia ban3 of this mat hang.
	 *
	 * @param giaBan3 the gia ban3 of this mat hang
	 */
	public void setGiaBan3(int giaBan3);

	/**
	 * Returns the ton toi thieu of this mat hang.
	 *
	 * @return the ton toi thieu of this mat hang
	 */
	public int getTonToiThieu();

	/**
	 * Sets the ton toi thieu of this mat hang.
	 *
	 * @param tonToiThieu the ton toi thieu of this mat hang
	 */
	public void setTonToiThieu(int tonToiThieu);

	/**
	 * Returns the ton toi da of this mat hang.
	 *
	 * @return the ton toi da of this mat hang
	 */
	public int getTonToiDa();

	/**
	 * Sets the ton toi da of this mat hang.
	 *
	 * @param tonToiDa the ton toi da of this mat hang
	 */
	public void setTonToiDa(int tonToiDa);

	/**
	 * Returns the gia von of this mat hang.
	 *
	 * @return the gia von of this mat hang
	 */
	public int getGiaVon();

	/**
	 * Sets the gia von of this mat hang.
	 *
	 * @param giaVon the gia von of this mat hang
	 */
	public void setGiaVon(int giaVon);

	/**
	 * Returns the hoa hong of this mat hang.
	 *
	 * @return the hoa hong of this mat hang
	 */
	public int getHoaHong();

	/**
	 * Sets the hoa hong of this mat hang.
	 *
	 * @param hoaHong the hoa hong of this mat hang
	 */
	public void setHoaHong(int hoaHong);

	/**
	 * Returns the nhom mat hang ID of this mat hang.
	 *
	 * @return the nhom mat hang ID of this mat hang
	 */
	public long getNhomMatHangId();

	/**
	 * Sets the nhom mat hang ID of this mat hang.
	 *
	 * @param nhomMatHangId the nhom mat hang ID of this mat hang
	 */
	public void setNhomMatHangId(long nhomMatHangId);

	/**
	 * Returns the don vi tinh ID of this mat hang.
	 *
	 * @return the don vi tinh ID of this mat hang
	 */
	public long getDonViTinhId();

	/**
	 * Sets the don vi tinh ID of this mat hang.
	 *
	 * @param donViTinhId the don vi tinh ID of this mat hang
	 */
	public void setDonViTinhId(long donViTinhId);

	/**
	 * Returns the size of this mat hang.
	 *
	 * @return the size of this mat hang
	 */
	@AutoEscape
	public String getSize();

	/**
	 * Sets the size of this mat hang.
	 *
	 * @param size the size of this mat hang
	 */
	public void setSize(String size);

	/**
	 * Returns the image url of this mat hang.
	 *
	 * @return the image url of this mat hang
	 */
	@AutoEscape
	public String getImageUrl();

	/**
	 * Sets the image url of this mat hang.
	 *
	 * @param imageUrl the image url of this mat hang
	 */
	public void setImageUrl(String imageUrl);

	/**
	 * Returns the hoat dong of this mat hang.
	 *
	 * @return the hoat dong of this mat hang
	 */
	public boolean getHoatDong();

	/**
	 * Returns <code>true</code> if this mat hang is hoat dong.
	 *
	 * @return <code>true</code> if this mat hang is hoat dong; <code>false</code> otherwise
	 */
	public boolean isHoatDong();

	/**
	 * Sets whether this mat hang is hoat dong.
	 *
	 * @param hoatDong the hoat dong of this mat hang
	 */
	public void setHoatDong(boolean hoatDong);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.minimart.portlet.mathang.model.MatHang matHang);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.minimart.portlet.mathang.model.MatHang> toCacheModel();

	@Override
	public com.minimart.portlet.mathang.model.MatHang toEscapedModel();

	@Override
	public com.minimart.portlet.mathang.model.MatHang toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}