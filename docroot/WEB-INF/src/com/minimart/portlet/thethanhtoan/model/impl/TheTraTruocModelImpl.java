/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.thethanhtoan.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.thethanhtoan.model.TheTraTruoc;
import com.minimart.portlet.thethanhtoan.model.TheTraTruocModel;
import com.minimart.portlet.thethanhtoan.model.TheTraTruocSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TheTraTruoc service. Represents a row in the &quot;minimart_thetratruoc&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.thethanhtoan.model.TheTraTruocModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TheTraTruocImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see TheTraTruocImpl
 * @see com.minimart.portlet.thethanhtoan.model.TheTraTruoc
 * @see com.minimart.portlet.thethanhtoan.model.TheTraTruocModel
 * @generated
 */
@JSON(strict = true)
public class TheTraTruocModelImpl extends BaseModelImpl<TheTraTruoc>
	implements TheTraTruocModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a the tra truoc model instance should use the {@link com.minimart.portlet.thethanhtoan.model.TheTraTruoc} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_thetratruoc";
	public static final Object[][] TABLE_COLUMNS = {
			{ "theTraTruocId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "tenThe", Types.VARCHAR },
			{ "nhomTheTraTruocId", Types.BIGINT },
			{ "khoa", Types.BOOLEAN },
			{ "ngayHetHan", Types.TIMESTAMP },
			{ "trangThai", Types.VARCHAR },
			{ "userModifiledId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_thetratruoc (theTraTruocId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,tenThe VARCHAR(75) null,nhomTheTraTruocId LONG,khoa BOOLEAN,ngayHetHan DATE null,trangThai VARCHAR(75) null,userModifiledId LONG)";
	public static final String TABLE_SQL_DROP = "drop table minimart_thetratruoc";
	public static final String ORDER_BY_JPQL = " ORDER BY theTraTruoc.tenThe ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_thetratruoc.tenThe ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.thethanhtoan.model.TheTraTruoc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.thethanhtoan.model.TheTraTruoc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.thethanhtoan.model.TheTraTruoc"),
			true);
	public static long KHOA_COLUMN_BITMASK = 1L;
	public static long NGAYHETHAN_COLUMN_BITMASK = 2L;
	public static long TRANGTHAI_COLUMN_BITMASK = 4L;
	public static long TENTHE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TheTraTruoc toModel(TheTraTruocSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TheTraTruoc model = new TheTraTruocImpl();

		model.setTheTraTruocId(soapModel.getTheTraTruocId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTenThe(soapModel.getTenThe());
		model.setNhomTheTraTruocId(soapModel.getNhomTheTraTruocId());
		model.setKhoa(soapModel.getKhoa());
		model.setNgayHetHan(soapModel.getNgayHetHan());
		model.setTrangThai(soapModel.getTrangThai());
		model.setUserModifiledId(soapModel.getUserModifiledId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TheTraTruoc> toModels(TheTraTruocSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TheTraTruoc> models = new ArrayList<TheTraTruoc>(soapModels.length);

		for (TheTraTruocSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.thethanhtoan.model.TheTraTruoc"));

	public TheTraTruocModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _theTraTruocId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTheTraTruocId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _theTraTruocId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TheTraTruoc.class;
	}

	@Override
	public String getModelClassName() {
		return TheTraTruoc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("theTraTruocId", getTheTraTruocId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("tenThe", getTenThe());
		attributes.put("nhomTheTraTruocId", getNhomTheTraTruocId());
		attributes.put("khoa", getKhoa());
		attributes.put("ngayHetHan", getNgayHetHan());
		attributes.put("trangThai", getTrangThai());
		attributes.put("userModifiledId", getUserModifiledId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long theTraTruocId = (Long)attributes.get("theTraTruocId");

		if (theTraTruocId != null) {
			setTheTraTruocId(theTraTruocId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String tenThe = (String)attributes.get("tenThe");

		if (tenThe != null) {
			setTenThe(tenThe);
		}

		Long nhomTheTraTruocId = (Long)attributes.get("nhomTheTraTruocId");

		if (nhomTheTraTruocId != null) {
			setNhomTheTraTruocId(nhomTheTraTruocId);
		}

		Boolean khoa = (Boolean)attributes.get("khoa");

		if (khoa != null) {
			setKhoa(khoa);
		}

		Date ngayHetHan = (Date)attributes.get("ngayHetHan");

		if (ngayHetHan != null) {
			setNgayHetHan(ngayHetHan);
		}

		String trangThai = (String)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Long userModifiledId = (Long)attributes.get("userModifiledId");

		if (userModifiledId != null) {
			setUserModifiledId(userModifiledId);
		}
	}

	@JSON
	@Override
	public long getTheTraTruocId() {
		return _theTraTruocId;
	}

	@Override
	public void setTheTraTruocId(long theTraTruocId) {
		_theTraTruocId = theTraTruocId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTenThe() {
		if (_tenThe == null) {
			return StringPool.BLANK;
		}
		else {
			return _tenThe;
		}
	}

	@Override
	public void setTenThe(String tenThe) {
		_columnBitmask = -1L;

		_tenThe = tenThe;
	}

	@JSON
	@Override
	public long getNhomTheTraTruocId() {
		return _nhomTheTraTruocId;
	}

	@Override
	public void setNhomTheTraTruocId(long nhomTheTraTruocId) {
		_nhomTheTraTruocId = nhomTheTraTruocId;
	}

	@JSON
	@Override
	public boolean getKhoa() {
		return _khoa;
	}

	@Override
	public boolean isKhoa() {
		return _khoa;
	}

	@Override
	public void setKhoa(boolean khoa) {
		_columnBitmask |= KHOA_COLUMN_BITMASK;

		if (!_setOriginalKhoa) {
			_setOriginalKhoa = true;

			_originalKhoa = _khoa;
		}

		_khoa = khoa;
	}

	public boolean getOriginalKhoa() {
		return _originalKhoa;
	}

	@JSON
	@Override
	public Date getNgayHetHan() {
		return _ngayHetHan;
	}

	@Override
	public void setNgayHetHan(Date ngayHetHan) {
		_columnBitmask |= NGAYHETHAN_COLUMN_BITMASK;

		if (_originalNgayHetHan == null) {
			_originalNgayHetHan = _ngayHetHan;
		}

		_ngayHetHan = ngayHetHan;
	}

	public Date getOriginalNgayHetHan() {
		return _originalNgayHetHan;
	}

	@JSON
	@Override
	public String getTrangThai() {
		if (_trangThai == null) {
			return StringPool.BLANK;
		}
		else {
			return _trangThai;
		}
	}

	@Override
	public void setTrangThai(String trangThai) {
		_columnBitmask |= TRANGTHAI_COLUMN_BITMASK;

		if (_originalTrangThai == null) {
			_originalTrangThai = _trangThai;
		}

		_trangThai = trangThai;
	}

	public String getOriginalTrangThai() {
		return GetterUtil.getString(_originalTrangThai);
	}

	@JSON
	@Override
	public long getUserModifiledId() {
		return _userModifiledId;
	}

	@Override
	public void setUserModifiledId(long userModifiledId) {
		_userModifiledId = userModifiledId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TheTraTruoc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TheTraTruoc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TheTraTruoc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TheTraTruocImpl theTraTruocImpl = new TheTraTruocImpl();

		theTraTruocImpl.setTheTraTruocId(getTheTraTruocId());
		theTraTruocImpl.setCompanyId(getCompanyId());
		theTraTruocImpl.setUserId(getUserId());
		theTraTruocImpl.setUserName(getUserName());
		theTraTruocImpl.setCreateDate(getCreateDate());
		theTraTruocImpl.setModifiedDate(getModifiedDate());
		theTraTruocImpl.setTenThe(getTenThe());
		theTraTruocImpl.setNhomTheTraTruocId(getNhomTheTraTruocId());
		theTraTruocImpl.setKhoa(getKhoa());
		theTraTruocImpl.setNgayHetHan(getNgayHetHan());
		theTraTruocImpl.setTrangThai(getTrangThai());
		theTraTruocImpl.setUserModifiledId(getUserModifiledId());

		theTraTruocImpl.resetOriginalValues();

		return theTraTruocImpl;
	}

	@Override
	public int compareTo(TheTraTruoc theTraTruoc) {
		int value = 0;

		value = getTenThe().compareTo(theTraTruoc.getTenThe());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TheTraTruoc)) {
			return false;
		}

		TheTraTruoc theTraTruoc = (TheTraTruoc)obj;

		long primaryKey = theTraTruoc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TheTraTruocModelImpl theTraTruocModelImpl = this;

		theTraTruocModelImpl._originalKhoa = theTraTruocModelImpl._khoa;

		theTraTruocModelImpl._setOriginalKhoa = false;

		theTraTruocModelImpl._originalNgayHetHan = theTraTruocModelImpl._ngayHetHan;

		theTraTruocModelImpl._originalTrangThai = theTraTruocModelImpl._trangThai;

		theTraTruocModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TheTraTruoc> toCacheModel() {
		TheTraTruocCacheModel theTraTruocCacheModel = new TheTraTruocCacheModel();

		theTraTruocCacheModel.theTraTruocId = getTheTraTruocId();

		theTraTruocCacheModel.companyId = getCompanyId();

		theTraTruocCacheModel.userId = getUserId();

		theTraTruocCacheModel.userName = getUserName();

		String userName = theTraTruocCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			theTraTruocCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			theTraTruocCacheModel.createDate = createDate.getTime();
		}
		else {
			theTraTruocCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			theTraTruocCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			theTraTruocCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		theTraTruocCacheModel.tenThe = getTenThe();

		String tenThe = theTraTruocCacheModel.tenThe;

		if ((tenThe != null) && (tenThe.length() == 0)) {
			theTraTruocCacheModel.tenThe = null;
		}

		theTraTruocCacheModel.nhomTheTraTruocId = getNhomTheTraTruocId();

		theTraTruocCacheModel.khoa = getKhoa();

		Date ngayHetHan = getNgayHetHan();

		if (ngayHetHan != null) {
			theTraTruocCacheModel.ngayHetHan = ngayHetHan.getTime();
		}
		else {
			theTraTruocCacheModel.ngayHetHan = Long.MIN_VALUE;
		}

		theTraTruocCacheModel.trangThai = getTrangThai();

		String trangThai = theTraTruocCacheModel.trangThai;

		if ((trangThai != null) && (trangThai.length() == 0)) {
			theTraTruocCacheModel.trangThai = null;
		}

		theTraTruocCacheModel.userModifiledId = getUserModifiledId();

		return theTraTruocCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{theTraTruocId=");
		sb.append(getTheTraTruocId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", tenThe=");
		sb.append(getTenThe());
		sb.append(", nhomTheTraTruocId=");
		sb.append(getNhomTheTraTruocId());
		sb.append(", khoa=");
		sb.append(getKhoa());
		sb.append(", ngayHetHan=");
		sb.append(getNgayHetHan());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", userModifiledId=");
		sb.append(getUserModifiledId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.thethanhtoan.model.TheTraTruoc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>theTraTruocId</column-name><column-value><![CDATA[");
		sb.append(getTheTraTruocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenThe</column-name><column-value><![CDATA[");
		sb.append(getTenThe());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhomTheTraTruocId</column-name><column-value><![CDATA[");
		sb.append(getNhomTheTraTruocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>khoa</column-name><column-value><![CDATA[");
		sb.append(getKhoa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayHetHan</column-name><column-value><![CDATA[");
		sb.append(getNgayHetHan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userModifiledId</column-name><column-value><![CDATA[");
		sb.append(getUserModifiledId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TheTraTruoc.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TheTraTruoc.class
		};
	private long _theTraTruocId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _tenThe;
	private long _nhomTheTraTruocId;
	private boolean _khoa;
	private boolean _originalKhoa;
	private boolean _setOriginalKhoa;
	private Date _ngayHetHan;
	private Date _originalNgayHetHan;
	private String _trangThai;
	private String _originalTrangThai;
	private long _userModifiledId;
	private long _columnBitmask;
	private TheTraTruoc _escapedModel;
}