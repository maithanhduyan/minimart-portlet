/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.dathang.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.dathang.model.DatHangChiTiet;
import com.minimart.portlet.dathang.model.DatHangChiTietModel;
import com.minimart.portlet.dathang.model.DatHangChiTietSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DatHangChiTiet service. Represents a row in the &quot;minimart_dathangchitiet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.dathang.model.DatHangChiTietModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DatHangChiTietImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see DatHangChiTietImpl
 * @see com.minimart.portlet.dathang.model.DatHangChiTiet
 * @see com.minimart.portlet.dathang.model.DatHangChiTietModel
 * @generated
 */
@JSON(strict = true)
public class DatHangChiTietModelImpl extends BaseModelImpl<DatHangChiTiet>
	implements DatHangChiTietModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dat hang chi tiet model instance should use the {@link com.minimart.portlet.dathang.model.DatHangChiTiet} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_dathangchitiet";
	public static final Object[][] TABLE_COLUMNS = {
			{ "datHangChiTietId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "soLuong", Types.INTEGER },
			{ "donGia", Types.INTEGER },
			{ "thanhTien", Types.INTEGER },
			{ "tiLeGiamGia", Types.DOUBLE },
			{ "ghiChu", Types.VARCHAR },
			{ "trangThai", Types.BOOLEAN },
			{ "baoHanh", Types.VARCHAR },
			{ "donViTinhId", Types.BIGINT },
			{ "datHangId", Types.BIGINT },
			{ "maHangId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_dathangchitiet (datHangChiTietId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,soLuong INTEGER,donGia INTEGER,thanhTien INTEGER,tiLeGiamGia DOUBLE,ghiChu VARCHAR(75) null,trangThai BOOLEAN,baoHanh VARCHAR(75) null,donViTinhId LONG,datHangId LONG,maHangId LONG)";
	public static final String TABLE_SQL_DROP = "drop table minimart_dathangchitiet";
	public static final String ORDER_BY_JPQL = " ORDER BY datHangChiTiet.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_dathangchitiet.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.dathang.model.DatHangChiTiet"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.dathang.model.DatHangChiTiet"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.dathang.model.DatHangChiTiet"),
			true);
	public static long DATHANGID_COLUMN_BITMASK = 1L;
	public static long MAHANGID_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DatHangChiTiet toModel(DatHangChiTietSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DatHangChiTiet model = new DatHangChiTietImpl();

		model.setDatHangChiTietId(soapModel.getDatHangChiTietId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setSoLuong(soapModel.getSoLuong());
		model.setDonGia(soapModel.getDonGia());
		model.setThanhTien(soapModel.getThanhTien());
		model.setTiLeGiamGia(soapModel.getTiLeGiamGia());
		model.setGhiChu(soapModel.getGhiChu());
		model.setTrangThai(soapModel.getTrangThai());
		model.setBaoHanh(soapModel.getBaoHanh());
		model.setDonViTinhId(soapModel.getDonViTinhId());
		model.setDatHangId(soapModel.getDatHangId());
		model.setMaHangId(soapModel.getMaHangId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DatHangChiTiet> toModels(DatHangChiTietSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DatHangChiTiet> models = new ArrayList<DatHangChiTiet>(soapModels.length);

		for (DatHangChiTietSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.dathang.model.DatHangChiTiet"));

	public DatHangChiTietModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _datHangChiTietId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDatHangChiTietId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _datHangChiTietId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DatHangChiTiet.class;
	}

	@Override
	public String getModelClassName() {
		return DatHangChiTiet.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("datHangChiTietId", getDatHangChiTietId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("soLuong", getSoLuong());
		attributes.put("donGia", getDonGia());
		attributes.put("thanhTien", getThanhTien());
		attributes.put("tiLeGiamGia", getTiLeGiamGia());
		attributes.put("ghiChu", getGhiChu());
		attributes.put("trangThai", getTrangThai());
		attributes.put("baoHanh", getBaoHanh());
		attributes.put("donViTinhId", getDonViTinhId());
		attributes.put("datHangId", getDatHangId());
		attributes.put("maHangId", getMaHangId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long datHangChiTietId = (Long)attributes.get("datHangChiTietId");

		if (datHangChiTietId != null) {
			setDatHangChiTietId(datHangChiTietId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer soLuong = (Integer)attributes.get("soLuong");

		if (soLuong != null) {
			setSoLuong(soLuong);
		}

		Integer donGia = (Integer)attributes.get("donGia");

		if (donGia != null) {
			setDonGia(donGia);
		}

		Integer thanhTien = (Integer)attributes.get("thanhTien");

		if (thanhTien != null) {
			setThanhTien(thanhTien);
		}

		Double tiLeGiamGia = (Double)attributes.get("tiLeGiamGia");

		if (tiLeGiamGia != null) {
			setTiLeGiamGia(tiLeGiamGia);
		}

		String ghiChu = (String)attributes.get("ghiChu");

		if (ghiChu != null) {
			setGhiChu(ghiChu);
		}

		Boolean trangThai = (Boolean)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		String baoHanh = (String)attributes.get("baoHanh");

		if (baoHanh != null) {
			setBaoHanh(baoHanh);
		}

		Long donViTinhId = (Long)attributes.get("donViTinhId");

		if (donViTinhId != null) {
			setDonViTinhId(donViTinhId);
		}

		Long datHangId = (Long)attributes.get("datHangId");

		if (datHangId != null) {
			setDatHangId(datHangId);
		}

		Long maHangId = (Long)attributes.get("maHangId");

		if (maHangId != null) {
			setMaHangId(maHangId);
		}
	}

	@JSON
	@Override
	public long getDatHangChiTietId() {
		return _datHangChiTietId;
	}

	@Override
	public void setDatHangChiTietId(long datHangChiTietId) {
		_datHangChiTietId = datHangChiTietId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getSoLuong() {
		return _soLuong;
	}

	@Override
	public void setSoLuong(int soLuong) {
		_soLuong = soLuong;
	}

	@JSON
	@Override
	public int getDonGia() {
		return _donGia;
	}

	@Override
	public void setDonGia(int donGia) {
		_donGia = donGia;
	}

	@JSON
	@Override
	public int getThanhTien() {
		return _thanhTien;
	}

	@Override
	public void setThanhTien(int thanhTien) {
		_thanhTien = thanhTien;
	}

	@JSON
	@Override
	public double getTiLeGiamGia() {
		return _tiLeGiamGia;
	}

	@Override
	public void setTiLeGiamGia(double tiLeGiamGia) {
		_tiLeGiamGia = tiLeGiamGia;
	}

	@JSON
	@Override
	public String getGhiChu() {
		if (_ghiChu == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChu;
		}
	}

	@Override
	public void setGhiChu(String ghiChu) {
		_ghiChu = ghiChu;
	}

	@JSON
	@Override
	public boolean getTrangThai() {
		return _trangThai;
	}

	@Override
	public boolean isTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(boolean trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public String getBaoHanh() {
		if (_baoHanh == null) {
			return StringPool.BLANK;
		}
		else {
			return _baoHanh;
		}
	}

	@Override
	public void setBaoHanh(String baoHanh) {
		_baoHanh = baoHanh;
	}

	@JSON
	@Override
	public long getDonViTinhId() {
		return _donViTinhId;
	}

	@Override
	public void setDonViTinhId(long donViTinhId) {
		_donViTinhId = donViTinhId;
	}

	@JSON
	@Override
	public long getDatHangId() {
		return _datHangId;
	}

	@Override
	public void setDatHangId(long datHangId) {
		_columnBitmask |= DATHANGID_COLUMN_BITMASK;

		if (!_setOriginalDatHangId) {
			_setOriginalDatHangId = true;

			_originalDatHangId = _datHangId;
		}

		_datHangId = datHangId;
	}

	public long getOriginalDatHangId() {
		return _originalDatHangId;
	}

	@JSON
	@Override
	public long getMaHangId() {
		return _maHangId;
	}

	@Override
	public void setMaHangId(long maHangId) {
		_columnBitmask |= MAHANGID_COLUMN_BITMASK;

		if (!_setOriginalMaHangId) {
			_setOriginalMaHangId = true;

			_originalMaHangId = _maHangId;
		}

		_maHangId = maHangId;
	}

	public long getOriginalMaHangId() {
		return _originalMaHangId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DatHangChiTiet.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DatHangChiTiet toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DatHangChiTiet)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DatHangChiTietImpl datHangChiTietImpl = new DatHangChiTietImpl();

		datHangChiTietImpl.setDatHangChiTietId(getDatHangChiTietId());
		datHangChiTietImpl.setCompanyId(getCompanyId());
		datHangChiTietImpl.setUserId(getUserId());
		datHangChiTietImpl.setUserName(getUserName());
		datHangChiTietImpl.setCreateDate(getCreateDate());
		datHangChiTietImpl.setModifiedDate(getModifiedDate());
		datHangChiTietImpl.setSoLuong(getSoLuong());
		datHangChiTietImpl.setDonGia(getDonGia());
		datHangChiTietImpl.setThanhTien(getThanhTien());
		datHangChiTietImpl.setTiLeGiamGia(getTiLeGiamGia());
		datHangChiTietImpl.setGhiChu(getGhiChu());
		datHangChiTietImpl.setTrangThai(getTrangThai());
		datHangChiTietImpl.setBaoHanh(getBaoHanh());
		datHangChiTietImpl.setDonViTinhId(getDonViTinhId());
		datHangChiTietImpl.setDatHangId(getDatHangId());
		datHangChiTietImpl.setMaHangId(getMaHangId());

		datHangChiTietImpl.resetOriginalValues();

		return datHangChiTietImpl;
	}

	@Override
	public int compareTo(DatHangChiTiet datHangChiTiet) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				datHangChiTiet.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DatHangChiTiet)) {
			return false;
		}

		DatHangChiTiet datHangChiTiet = (DatHangChiTiet)obj;

		long primaryKey = datHangChiTiet.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DatHangChiTietModelImpl datHangChiTietModelImpl = this;

		datHangChiTietModelImpl._originalDatHangId = datHangChiTietModelImpl._datHangId;

		datHangChiTietModelImpl._setOriginalDatHangId = false;

		datHangChiTietModelImpl._originalMaHangId = datHangChiTietModelImpl._maHangId;

		datHangChiTietModelImpl._setOriginalMaHangId = false;

		datHangChiTietModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DatHangChiTiet> toCacheModel() {
		DatHangChiTietCacheModel datHangChiTietCacheModel = new DatHangChiTietCacheModel();

		datHangChiTietCacheModel.datHangChiTietId = getDatHangChiTietId();

		datHangChiTietCacheModel.companyId = getCompanyId();

		datHangChiTietCacheModel.userId = getUserId();

		datHangChiTietCacheModel.userName = getUserName();

		String userName = datHangChiTietCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			datHangChiTietCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			datHangChiTietCacheModel.createDate = createDate.getTime();
		}
		else {
			datHangChiTietCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			datHangChiTietCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			datHangChiTietCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		datHangChiTietCacheModel.soLuong = getSoLuong();

		datHangChiTietCacheModel.donGia = getDonGia();

		datHangChiTietCacheModel.thanhTien = getThanhTien();

		datHangChiTietCacheModel.tiLeGiamGia = getTiLeGiamGia();

		datHangChiTietCacheModel.ghiChu = getGhiChu();

		String ghiChu = datHangChiTietCacheModel.ghiChu;

		if ((ghiChu != null) && (ghiChu.length() == 0)) {
			datHangChiTietCacheModel.ghiChu = null;
		}

		datHangChiTietCacheModel.trangThai = getTrangThai();

		datHangChiTietCacheModel.baoHanh = getBaoHanh();

		String baoHanh = datHangChiTietCacheModel.baoHanh;

		if ((baoHanh != null) && (baoHanh.length() == 0)) {
			datHangChiTietCacheModel.baoHanh = null;
		}

		datHangChiTietCacheModel.donViTinhId = getDonViTinhId();

		datHangChiTietCacheModel.datHangId = getDatHangId();

		datHangChiTietCacheModel.maHangId = getMaHangId();

		return datHangChiTietCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{datHangChiTietId=");
		sb.append(getDatHangChiTietId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", soLuong=");
		sb.append(getSoLuong());
		sb.append(", donGia=");
		sb.append(getDonGia());
		sb.append(", thanhTien=");
		sb.append(getThanhTien());
		sb.append(", tiLeGiamGia=");
		sb.append(getTiLeGiamGia());
		sb.append(", ghiChu=");
		sb.append(getGhiChu());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", baoHanh=");
		sb.append(getBaoHanh());
		sb.append(", donViTinhId=");
		sb.append(getDonViTinhId());
		sb.append(", datHangId=");
		sb.append(getDatHangId());
		sb.append(", maHangId=");
		sb.append(getMaHangId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.dathang.model.DatHangChiTiet");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>datHangChiTietId</column-name><column-value><![CDATA[");
		sb.append(getDatHangChiTietId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soLuong</column-name><column-value><![CDATA[");
		sb.append(getSoLuong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>donGia</column-name><column-value><![CDATA[");
		sb.append(getDonGia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thanhTien</column-name><column-value><![CDATA[");
		sb.append(getThanhTien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tiLeGiamGia</column-name><column-value><![CDATA[");
		sb.append(getTiLeGiamGia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChu</column-name><column-value><![CDATA[");
		sb.append(getGhiChu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>baoHanh</column-name><column-value><![CDATA[");
		sb.append(getBaoHanh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>donViTinhId</column-name><column-value><![CDATA[");
		sb.append(getDonViTinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>datHangId</column-name><column-value><![CDATA[");
		sb.append(getDatHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maHangId</column-name><column-value><![CDATA[");
		sb.append(getMaHangId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DatHangChiTiet.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DatHangChiTiet.class
		};
	private long _datHangChiTietId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private int _soLuong;
	private int _donGia;
	private int _thanhTien;
	private double _tiLeGiamGia;
	private String _ghiChu;
	private boolean _trangThai;
	private String _baoHanh;
	private long _donViTinhId;
	private long _datHangId;
	private long _originalDatHangId;
	private boolean _setOriginalDatHangId;
	private long _maHangId;
	private long _originalMaHangId;
	private boolean _setOriginalMaHangId;
	private long _columnBitmask;
	private DatHangChiTiet _escapedModel;
}