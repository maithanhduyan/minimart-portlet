/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.dathang.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.dathang.model.DatHang;
import com.minimart.portlet.dathang.model.DatHangModel;
import com.minimart.portlet.dathang.model.DatHangSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DatHang service. Represents a row in the &quot;minimart_dathang&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.dathang.model.DatHangModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DatHangImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see DatHangImpl
 * @see com.minimart.portlet.dathang.model.DatHang
 * @see com.minimart.portlet.dathang.model.DatHangModel
 * @generated
 */
@JSON(strict = true)
public class DatHangModelImpl extends BaseModelImpl<DatHang>
	implements DatHangModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dat hang model instance should use the {@link com.minimart.portlet.dathang.model.DatHang} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_dathang";
	public static final Object[][] TABLE_COLUMNS = {
			{ "datHangId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "khachHangId", Types.BIGINT },
			{ "diaChiId", Types.BIGINT },
			{ "tienHang", Types.INTEGER },
			{ "tiLeThue", Types.DOUBLE },
			{ "tiLeGiamGia", Types.DOUBLE },
			{ "tienGiamGia", Types.INTEGER },
			{ "phiVanChuyen", Types.INTEGER },
			{ "tongCong", Types.INTEGER },
			{ "loai", Types.INTEGER },
			{ "giamTheoTien", Types.INTEGER },
			{ "trangThai", Types.BOOLEAN },
			{ "userModifiedId", Types.BIGINT },
			{ "timeModified", Types.TIMESTAMP },
			{ "userCreateId", Types.BIGINT },
			{ "loaiGia", Types.INTEGER },
			{ "hoatDong", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_dathang (datHangId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,khachHangId LONG,diaChiId LONG,tienHang INTEGER,tiLeThue DOUBLE,tiLeGiamGia DOUBLE,tienGiamGia INTEGER,phiVanChuyen INTEGER,tongCong INTEGER,loai INTEGER,giamTheoTien INTEGER,trangThai BOOLEAN,userModifiedId LONG,timeModified DATE null,userCreateId LONG,loaiGia INTEGER,hoatDong BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table minimart_dathang";
	public static final String ORDER_BY_JPQL = " ORDER BY datHang.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_dathang.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.dathang.model.DatHang"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.dathang.model.DatHang"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.dathang.model.DatHang"),
			true);
	public static long HOATDONG_COLUMN_BITMASK = 1L;
	public static long KHACHHANGID_COLUMN_BITMASK = 2L;
	public static long TEN_COLUMN_BITMASK = 4L;
	public static long CREATEDATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DatHang toModel(DatHangSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DatHang model = new DatHangImpl();

		model.setDatHangId(soapModel.getDatHangId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setKhachHangId(soapModel.getKhachHangId());
		model.setDiaChiId(soapModel.getDiaChiId());
		model.setTienHang(soapModel.getTienHang());
		model.setTiLeThue(soapModel.getTiLeThue());
		model.setTiLeGiamGia(soapModel.getTiLeGiamGia());
		model.setTienGiamGia(soapModel.getTienGiamGia());
		model.setPhiVanChuyen(soapModel.getPhiVanChuyen());
		model.setTongCong(soapModel.getTongCong());
		model.setLoai(soapModel.getLoai());
		model.setGiamTheoTien(soapModel.getGiamTheoTien());
		model.setTrangThai(soapModel.getTrangThai());
		model.setUserModifiedId(soapModel.getUserModifiedId());
		model.setTimeModified(soapModel.getTimeModified());
		model.setUserCreateId(soapModel.getUserCreateId());
		model.setLoaiGia(soapModel.getLoaiGia());
		model.setHoatDong(soapModel.getHoatDong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DatHang> toModels(DatHangSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DatHang> models = new ArrayList<DatHang>(soapModels.length);

		for (DatHangSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.dathang.model.DatHang"));

	public DatHangModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _datHangId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDatHangId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _datHangId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DatHang.class;
	}

	@Override
	public String getModelClassName() {
		return DatHang.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("datHangId", getDatHangId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("khachHangId", getKhachHangId());
		attributes.put("diaChiId", getDiaChiId());
		attributes.put("tienHang", getTienHang());
		attributes.put("tiLeThue", getTiLeThue());
		attributes.put("tiLeGiamGia", getTiLeGiamGia());
		attributes.put("tienGiamGia", getTienGiamGia());
		attributes.put("phiVanChuyen", getPhiVanChuyen());
		attributes.put("tongCong", getTongCong());
		attributes.put("loai", getLoai());
		attributes.put("giamTheoTien", getGiamTheoTien());
		attributes.put("trangThai", getTrangThai());
		attributes.put("userModifiedId", getUserModifiedId());
		attributes.put("timeModified", getTimeModified());
		attributes.put("userCreateId", getUserCreateId());
		attributes.put("loaiGia", getLoaiGia());
		attributes.put("hoatDong", getHoatDong());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long datHangId = (Long)attributes.get("datHangId");

		if (datHangId != null) {
			setDatHangId(datHangId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		Long khachHangId = (Long)attributes.get("khachHangId");

		if (khachHangId != null) {
			setKhachHangId(khachHangId);
		}

		Long diaChiId = (Long)attributes.get("diaChiId");

		if (diaChiId != null) {
			setDiaChiId(diaChiId);
		}

		Integer tienHang = (Integer)attributes.get("tienHang");

		if (tienHang != null) {
			setTienHang(tienHang);
		}

		Double tiLeThue = (Double)attributes.get("tiLeThue");

		if (tiLeThue != null) {
			setTiLeThue(tiLeThue);
		}

		Double tiLeGiamGia = (Double)attributes.get("tiLeGiamGia");

		if (tiLeGiamGia != null) {
			setTiLeGiamGia(tiLeGiamGia);
		}

		Integer tienGiamGia = (Integer)attributes.get("tienGiamGia");

		if (tienGiamGia != null) {
			setTienGiamGia(tienGiamGia);
		}

		Integer phiVanChuyen = (Integer)attributes.get("phiVanChuyen");

		if (phiVanChuyen != null) {
			setPhiVanChuyen(phiVanChuyen);
		}

		Integer tongCong = (Integer)attributes.get("tongCong");

		if (tongCong != null) {
			setTongCong(tongCong);
		}

		Integer loai = (Integer)attributes.get("loai");

		if (loai != null) {
			setLoai(loai);
		}

		Integer giamTheoTien = (Integer)attributes.get("giamTheoTien");

		if (giamTheoTien != null) {
			setGiamTheoTien(giamTheoTien);
		}

		Boolean trangThai = (Boolean)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Long userModifiedId = (Long)attributes.get("userModifiedId");

		if (userModifiedId != null) {
			setUserModifiedId(userModifiedId);
		}

		Date timeModified = (Date)attributes.get("timeModified");

		if (timeModified != null) {
			setTimeModified(timeModified);
		}

		Long userCreateId = (Long)attributes.get("userCreateId");

		if (userCreateId != null) {
			setUserCreateId(userCreateId);
		}

		Integer loaiGia = (Integer)attributes.get("loaiGia");

		if (loaiGia != null) {
			setLoaiGia(loaiGia);
		}

		Boolean hoatDong = (Boolean)attributes.get("hoatDong");

		if (hoatDong != null) {
			setHoatDong(hoatDong);
		}
	}

	@JSON
	@Override
	public long getDatHangId() {
		return _datHangId;
	}

	@Override
	public void setDatHangId(long datHangId) {
		_datHangId = datHangId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_columnBitmask |= TEN_COLUMN_BITMASK;

		if (_originalTen == null) {
			_originalTen = _ten;
		}

		_ten = ten;
	}

	public String getOriginalTen() {
		return GetterUtil.getString(_originalTen);
	}

	@JSON
	@Override
	public long getKhachHangId() {
		return _khachHangId;
	}

	@Override
	public void setKhachHangId(long khachHangId) {
		_columnBitmask |= KHACHHANGID_COLUMN_BITMASK;

		if (!_setOriginalKhachHangId) {
			_setOriginalKhachHangId = true;

			_originalKhachHangId = _khachHangId;
		}

		_khachHangId = khachHangId;
	}

	public long getOriginalKhachHangId() {
		return _originalKhachHangId;
	}

	@JSON
	@Override
	public long getDiaChiId() {
		return _diaChiId;
	}

	@Override
	public void setDiaChiId(long diaChiId) {
		_diaChiId = diaChiId;
	}

	@JSON
	@Override
	public int getTienHang() {
		return _tienHang;
	}

	@Override
	public void setTienHang(int tienHang) {
		_tienHang = tienHang;
	}

	@JSON
	@Override
	public double getTiLeThue() {
		return _tiLeThue;
	}

	@Override
	public void setTiLeThue(double tiLeThue) {
		_tiLeThue = tiLeThue;
	}

	@JSON
	@Override
	public double getTiLeGiamGia() {
		return _tiLeGiamGia;
	}

	@Override
	public void setTiLeGiamGia(double tiLeGiamGia) {
		_tiLeGiamGia = tiLeGiamGia;
	}

	@JSON
	@Override
	public int getTienGiamGia() {
		return _tienGiamGia;
	}

	@Override
	public void setTienGiamGia(int tienGiamGia) {
		_tienGiamGia = tienGiamGia;
	}

	@JSON
	@Override
	public int getPhiVanChuyen() {
		return _phiVanChuyen;
	}

	@Override
	public void setPhiVanChuyen(int phiVanChuyen) {
		_phiVanChuyen = phiVanChuyen;
	}

	@JSON
	@Override
	public int getTongCong() {
		return _tongCong;
	}

	@Override
	public void setTongCong(int tongCong) {
		_tongCong = tongCong;
	}

	@JSON
	@Override
	public int getLoai() {
		return _loai;
	}

	@Override
	public void setLoai(int loai) {
		_loai = loai;
	}

	@JSON
	@Override
	public int getGiamTheoTien() {
		return _giamTheoTien;
	}

	@Override
	public void setGiamTheoTien(int giamTheoTien) {
		_giamTheoTien = giamTheoTien;
	}

	@JSON
	@Override
	public boolean getTrangThai() {
		return _trangThai;
	}

	@Override
	public boolean isTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(boolean trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public long getUserModifiedId() {
		return _userModifiedId;
	}

	@Override
	public void setUserModifiedId(long userModifiedId) {
		_userModifiedId = userModifiedId;
	}

	@JSON
	@Override
	public Date getTimeModified() {
		return _timeModified;
	}

	@Override
	public void setTimeModified(Date timeModified) {
		_timeModified = timeModified;
	}

	@JSON
	@Override
	public long getUserCreateId() {
		return _userCreateId;
	}

	@Override
	public void setUserCreateId(long userCreateId) {
		_userCreateId = userCreateId;
	}

	@JSON
	@Override
	public int getLoaiGia() {
		return _loaiGia;
	}

	@Override
	public void setLoaiGia(int loaiGia) {
		_loaiGia = loaiGia;
	}

	@JSON
	@Override
	public boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public boolean isHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(boolean hoatDong) {
		_columnBitmask |= HOATDONG_COLUMN_BITMASK;

		if (!_setOriginalHoatDong) {
			_setOriginalHoatDong = true;

			_originalHoatDong = _hoatDong;
		}

		_hoatDong = hoatDong;
	}

	public boolean getOriginalHoatDong() {
		return _originalHoatDong;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DatHang.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DatHang toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DatHang)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DatHangImpl datHangImpl = new DatHangImpl();

		datHangImpl.setDatHangId(getDatHangId());
		datHangImpl.setCompanyId(getCompanyId());
		datHangImpl.setUserId(getUserId());
		datHangImpl.setUserName(getUserName());
		datHangImpl.setCreateDate(getCreateDate());
		datHangImpl.setModifiedDate(getModifiedDate());
		datHangImpl.setTen(getTen());
		datHangImpl.setKhachHangId(getKhachHangId());
		datHangImpl.setDiaChiId(getDiaChiId());
		datHangImpl.setTienHang(getTienHang());
		datHangImpl.setTiLeThue(getTiLeThue());
		datHangImpl.setTiLeGiamGia(getTiLeGiamGia());
		datHangImpl.setTienGiamGia(getTienGiamGia());
		datHangImpl.setPhiVanChuyen(getPhiVanChuyen());
		datHangImpl.setTongCong(getTongCong());
		datHangImpl.setLoai(getLoai());
		datHangImpl.setGiamTheoTien(getGiamTheoTien());
		datHangImpl.setTrangThai(getTrangThai());
		datHangImpl.setUserModifiedId(getUserModifiedId());
		datHangImpl.setTimeModified(getTimeModified());
		datHangImpl.setUserCreateId(getUserCreateId());
		datHangImpl.setLoaiGia(getLoaiGia());
		datHangImpl.setHoatDong(getHoatDong());

		datHangImpl.resetOriginalValues();

		return datHangImpl;
	}

	@Override
	public int compareTo(DatHang datHang) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), datHang.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DatHang)) {
			return false;
		}

		DatHang datHang = (DatHang)obj;

		long primaryKey = datHang.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DatHangModelImpl datHangModelImpl = this;

		datHangModelImpl._originalTen = datHangModelImpl._ten;

		datHangModelImpl._originalKhachHangId = datHangModelImpl._khachHangId;

		datHangModelImpl._setOriginalKhachHangId = false;

		datHangModelImpl._originalHoatDong = datHangModelImpl._hoatDong;

		datHangModelImpl._setOriginalHoatDong = false;

		datHangModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DatHang> toCacheModel() {
		DatHangCacheModel datHangCacheModel = new DatHangCacheModel();

		datHangCacheModel.datHangId = getDatHangId();

		datHangCacheModel.companyId = getCompanyId();

		datHangCacheModel.userId = getUserId();

		datHangCacheModel.userName = getUserName();

		String userName = datHangCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			datHangCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			datHangCacheModel.createDate = createDate.getTime();
		}
		else {
			datHangCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			datHangCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			datHangCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		datHangCacheModel.ten = getTen();

		String ten = datHangCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			datHangCacheModel.ten = null;
		}

		datHangCacheModel.khachHangId = getKhachHangId();

		datHangCacheModel.diaChiId = getDiaChiId();

		datHangCacheModel.tienHang = getTienHang();

		datHangCacheModel.tiLeThue = getTiLeThue();

		datHangCacheModel.tiLeGiamGia = getTiLeGiamGia();

		datHangCacheModel.tienGiamGia = getTienGiamGia();

		datHangCacheModel.phiVanChuyen = getPhiVanChuyen();

		datHangCacheModel.tongCong = getTongCong();

		datHangCacheModel.loai = getLoai();

		datHangCacheModel.giamTheoTien = getGiamTheoTien();

		datHangCacheModel.trangThai = getTrangThai();

		datHangCacheModel.userModifiedId = getUserModifiedId();

		Date timeModified = getTimeModified();

		if (timeModified != null) {
			datHangCacheModel.timeModified = timeModified.getTime();
		}
		else {
			datHangCacheModel.timeModified = Long.MIN_VALUE;
		}

		datHangCacheModel.userCreateId = getUserCreateId();

		datHangCacheModel.loaiGia = getLoaiGia();

		datHangCacheModel.hoatDong = getHoatDong();

		return datHangCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{datHangId=");
		sb.append(getDatHangId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", khachHangId=");
		sb.append(getKhachHangId());
		sb.append(", diaChiId=");
		sb.append(getDiaChiId());
		sb.append(", tienHang=");
		sb.append(getTienHang());
		sb.append(", tiLeThue=");
		sb.append(getTiLeThue());
		sb.append(", tiLeGiamGia=");
		sb.append(getTiLeGiamGia());
		sb.append(", tienGiamGia=");
		sb.append(getTienGiamGia());
		sb.append(", phiVanChuyen=");
		sb.append(getPhiVanChuyen());
		sb.append(", tongCong=");
		sb.append(getTongCong());
		sb.append(", loai=");
		sb.append(getLoai());
		sb.append(", giamTheoTien=");
		sb.append(getGiamTheoTien());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", userModifiedId=");
		sb.append(getUserModifiedId());
		sb.append(", timeModified=");
		sb.append(getTimeModified());
		sb.append(", userCreateId=");
		sb.append(getUserCreateId());
		sb.append(", loaiGia=");
		sb.append(getLoaiGia());
		sb.append(", hoatDong=");
		sb.append(getHoatDong());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.dathang.model.DatHang");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>datHangId</column-name><column-value><![CDATA[");
		sb.append(getDatHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>khachHangId</column-name><column-value><![CDATA[");
		sb.append(getKhachHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaChiId</column-name><column-value><![CDATA[");
		sb.append(getDiaChiId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tienHang</column-name><column-value><![CDATA[");
		sb.append(getTienHang());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tiLeThue</column-name><column-value><![CDATA[");
		sb.append(getTiLeThue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tiLeGiamGia</column-name><column-value><![CDATA[");
		sb.append(getTiLeGiamGia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tienGiamGia</column-name><column-value><![CDATA[");
		sb.append(getTienGiamGia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phiVanChuyen</column-name><column-value><![CDATA[");
		sb.append(getPhiVanChuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tongCong</column-name><column-value><![CDATA[");
		sb.append(getTongCong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loai</column-name><column-value><![CDATA[");
		sb.append(getLoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>giamTheoTien</column-name><column-value><![CDATA[");
		sb.append(getGiamTheoTien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userModifiedId</column-name><column-value><![CDATA[");
		sb.append(getUserModifiedId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timeModified</column-name><column-value><![CDATA[");
		sb.append(getTimeModified());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userCreateId</column-name><column-value><![CDATA[");
		sb.append(getUserCreateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loaiGia</column-name><column-value><![CDATA[");
		sb.append(getLoaiGia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoatDong</column-name><column-value><![CDATA[");
		sb.append(getHoatDong());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DatHang.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DatHang.class
		};
	private long _datHangId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private String _originalTen;
	private long _khachHangId;
	private long _originalKhachHangId;
	private boolean _setOriginalKhachHangId;
	private long _diaChiId;
	private int _tienHang;
	private double _tiLeThue;
	private double _tiLeGiamGia;
	private int _tienGiamGia;
	private int _phiVanChuyen;
	private int _tongCong;
	private int _loai;
	private int _giamTheoTien;
	private boolean _trangThai;
	private long _userModifiedId;
	private Date _timeModified;
	private long _userCreateId;
	private int _loaiGia;
	private boolean _hoatDong;
	private boolean _originalHoatDong;
	private boolean _setOriginalHoatDong;
	private long _columnBitmask;
	private DatHang _escapedModel;
}