/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.khachhang.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.khachhang.model.KhachHang;
import com.minimart.portlet.khachhang.model.KhachHangModel;
import com.minimart.portlet.khachhang.model.KhachHangSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the KhachHang service. Represents a row in the &quot;minimart_khachhang&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.khachhang.model.KhachHangModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KhachHangImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see KhachHangImpl
 * @see com.minimart.portlet.khachhang.model.KhachHang
 * @see com.minimart.portlet.khachhang.model.KhachHangModel
 * @generated
 */
@JSON(strict = true)
public class KhachHangModelImpl extends BaseModelImpl<KhachHang>
	implements KhachHangModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a khach hang model instance should use the {@link com.minimart.portlet.khachhang.model.KhachHang} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_khachhang";
	public static final Object[][] TABLE_COLUMNS = {
			{ "khachHangId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "nhomKhachHangId", Types.BIGINT },
			{ "ma", Types.VARCHAR },
			{ "diaChi", Types.VARCHAR },
			{ "dienThoai", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "facebook", Types.VARCHAR },
			{ "twitter", Types.VARCHAR },
			{ "socialMedia1", Types.VARCHAR },
			{ "socialMedia2", Types.VARCHAR },
			{ "socialMedia3", Types.VARCHAR },
			{ "trangThai", Types.INTEGER },
			{ "diemTichLuy", Types.INTEGER },
			{ "maSoThue", Types.VARCHAR },
			{ "hoatDong", Types.BOOLEAN },
			{ "ngaySinh", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_khachhang (khachHangId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,nhomKhachHangId LONG,ma VARCHAR(75) null,diaChi VARCHAR(75) null,dienThoai VARCHAR(75) null,email VARCHAR(75) null,facebook VARCHAR(75) null,twitter VARCHAR(75) null,socialMedia1 VARCHAR(75) null,socialMedia2 VARCHAR(75) null,socialMedia3 VARCHAR(75) null,trangThai INTEGER,diemTichLuy INTEGER,maSoThue VARCHAR(75) null,hoatDong BOOLEAN,ngaySinh DATE null)";
	public static final String TABLE_SQL_DROP = "drop table minimart_khachhang";
	public static final String ORDER_BY_JPQL = " ORDER BY khachHang.ten ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_khachhang.ten ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.khachhang.model.KhachHang"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.khachhang.model.KhachHang"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.khachhang.model.KhachHang"),
			true);
	public static long HOATDONG_COLUMN_BITMASK = 1L;
	public static long MA_COLUMN_BITMASK = 2L;
	public static long NHOMKHACHHANGID_COLUMN_BITMASK = 4L;
	public static long TEN_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static KhachHang toModel(KhachHangSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		KhachHang model = new KhachHangImpl();

		model.setKhachHangId(soapModel.getKhachHangId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setNhomKhachHangId(soapModel.getNhomKhachHangId());
		model.setMa(soapModel.getMa());
		model.setDiaChi(soapModel.getDiaChi());
		model.setDienThoai(soapModel.getDienThoai());
		model.setEmail(soapModel.getEmail());
		model.setFacebook(soapModel.getFacebook());
		model.setTwitter(soapModel.getTwitter());
		model.setSocialMedia1(soapModel.getSocialMedia1());
		model.setSocialMedia2(soapModel.getSocialMedia2());
		model.setSocialMedia3(soapModel.getSocialMedia3());
		model.setTrangThai(soapModel.getTrangThai());
		model.setDiemTichLuy(soapModel.getDiemTichLuy());
		model.setMaSoThue(soapModel.getMaSoThue());
		model.setHoatDong(soapModel.getHoatDong());
		model.setNgaySinh(soapModel.getNgaySinh());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<KhachHang> toModels(KhachHangSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<KhachHang> models = new ArrayList<KhachHang>(soapModels.length);

		for (KhachHangSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.khachhang.model.KhachHang"));

	public KhachHangModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _khachHangId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKhachHangId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _khachHangId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KhachHang.class;
	}

	@Override
	public String getModelClassName() {
		return KhachHang.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("khachHangId", getKhachHangId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("nhomKhachHangId", getNhomKhachHangId());
		attributes.put("ma", getMa());
		attributes.put("diaChi", getDiaChi());
		attributes.put("dienThoai", getDienThoai());
		attributes.put("email", getEmail());
		attributes.put("facebook", getFacebook());
		attributes.put("twitter", getTwitter());
		attributes.put("socialMedia1", getSocialMedia1());
		attributes.put("socialMedia2", getSocialMedia2());
		attributes.put("socialMedia3", getSocialMedia3());
		attributes.put("trangThai", getTrangThai());
		attributes.put("diemTichLuy", getDiemTichLuy());
		attributes.put("maSoThue", getMaSoThue());
		attributes.put("hoatDong", getHoatDong());
		attributes.put("ngaySinh", getNgaySinh());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long khachHangId = (Long)attributes.get("khachHangId");

		if (khachHangId != null) {
			setKhachHangId(khachHangId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		Long nhomKhachHangId = (Long)attributes.get("nhomKhachHangId");

		if (nhomKhachHangId != null) {
			setNhomKhachHangId(nhomKhachHangId);
		}

		String ma = (String)attributes.get("ma");

		if (ma != null) {
			setMa(ma);
		}

		String diaChi = (String)attributes.get("diaChi");

		if (diaChi != null) {
			setDiaChi(diaChi);
		}

		String dienThoai = (String)attributes.get("dienThoai");

		if (dienThoai != null) {
			setDienThoai(dienThoai);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String facebook = (String)attributes.get("facebook");

		if (facebook != null) {
			setFacebook(facebook);
		}

		String twitter = (String)attributes.get("twitter");

		if (twitter != null) {
			setTwitter(twitter);
		}

		String socialMedia1 = (String)attributes.get("socialMedia1");

		if (socialMedia1 != null) {
			setSocialMedia1(socialMedia1);
		}

		String socialMedia2 = (String)attributes.get("socialMedia2");

		if (socialMedia2 != null) {
			setSocialMedia2(socialMedia2);
		}

		String socialMedia3 = (String)attributes.get("socialMedia3");

		if (socialMedia3 != null) {
			setSocialMedia3(socialMedia3);
		}

		Integer trangThai = (Integer)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Integer diemTichLuy = (Integer)attributes.get("diemTichLuy");

		if (diemTichLuy != null) {
			setDiemTichLuy(diemTichLuy);
		}

		String maSoThue = (String)attributes.get("maSoThue");

		if (maSoThue != null) {
			setMaSoThue(maSoThue);
		}

		Boolean hoatDong = (Boolean)attributes.get("hoatDong");

		if (hoatDong != null) {
			setHoatDong(hoatDong);
		}

		Date ngaySinh = (Date)attributes.get("ngaySinh");

		if (ngaySinh != null) {
			setNgaySinh(ngaySinh);
		}
	}

	@JSON
	@Override
	public long getKhachHangId() {
		return _khachHangId;
	}

	@Override
	public void setKhachHangId(long khachHangId) {
		_khachHangId = khachHangId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_columnBitmask = -1L;

		if (_originalTen == null) {
			_originalTen = _ten;
		}

		_ten = ten;
	}

	public String getOriginalTen() {
		return GetterUtil.getString(_originalTen);
	}

	@JSON
	@Override
	public long getNhomKhachHangId() {
		return _nhomKhachHangId;
	}

	@Override
	public void setNhomKhachHangId(long nhomKhachHangId) {
		_columnBitmask |= NHOMKHACHHANGID_COLUMN_BITMASK;

		if (!_setOriginalNhomKhachHangId) {
			_setOriginalNhomKhachHangId = true;

			_originalNhomKhachHangId = _nhomKhachHangId;
		}

		_nhomKhachHangId = nhomKhachHangId;
	}

	public long getOriginalNhomKhachHangId() {
		return _originalNhomKhachHangId;
	}

	@JSON
	@Override
	public String getMa() {
		if (_ma == null) {
			return StringPool.BLANK;
		}
		else {
			return _ma;
		}
	}

	@Override
	public void setMa(String ma) {
		_columnBitmask |= MA_COLUMN_BITMASK;

		if (_originalMa == null) {
			_originalMa = _ma;
		}

		_ma = ma;
	}

	public String getOriginalMa() {
		return GetterUtil.getString(_originalMa);
	}

	@JSON
	@Override
	public String getDiaChi() {
		if (_diaChi == null) {
			return StringPool.BLANK;
		}
		else {
			return _diaChi;
		}
	}

	@Override
	public void setDiaChi(String diaChi) {
		_diaChi = diaChi;
	}

	@JSON
	@Override
	public String getDienThoai() {
		if (_dienThoai == null) {
			return StringPool.BLANK;
		}
		else {
			return _dienThoai;
		}
	}

	@Override
	public void setDienThoai(String dienThoai) {
		_dienThoai = dienThoai;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getFacebook() {
		if (_facebook == null) {
			return StringPool.BLANK;
		}
		else {
			return _facebook;
		}
	}

	@Override
	public void setFacebook(String facebook) {
		_facebook = facebook;
	}

	@JSON
	@Override
	public String getTwitter() {
		if (_twitter == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitter;
		}
	}

	@Override
	public void setTwitter(String twitter) {
		_twitter = twitter;
	}

	@JSON
	@Override
	public String getSocialMedia1() {
		if (_socialMedia1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _socialMedia1;
		}
	}

	@Override
	public void setSocialMedia1(String socialMedia1) {
		_socialMedia1 = socialMedia1;
	}

	@JSON
	@Override
	public String getSocialMedia2() {
		if (_socialMedia2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _socialMedia2;
		}
	}

	@Override
	public void setSocialMedia2(String socialMedia2) {
		_socialMedia2 = socialMedia2;
	}

	@JSON
	@Override
	public String getSocialMedia3() {
		if (_socialMedia3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _socialMedia3;
		}
	}

	@Override
	public void setSocialMedia3(String socialMedia3) {
		_socialMedia3 = socialMedia3;
	}

	@JSON
	@Override
	public int getTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(int trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public int getDiemTichLuy() {
		return _diemTichLuy;
	}

	@Override
	public void setDiemTichLuy(int diemTichLuy) {
		_diemTichLuy = diemTichLuy;
	}

	@JSON
	@Override
	public String getMaSoThue() {
		if (_maSoThue == null) {
			return StringPool.BLANK;
		}
		else {
			return _maSoThue;
		}
	}

	@Override
	public void setMaSoThue(String maSoThue) {
		_maSoThue = maSoThue;
	}

	@JSON
	@Override
	public boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public boolean isHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(boolean hoatDong) {
		_columnBitmask |= HOATDONG_COLUMN_BITMASK;

		if (!_setOriginalHoatDong) {
			_setOriginalHoatDong = true;

			_originalHoatDong = _hoatDong;
		}

		_hoatDong = hoatDong;
	}

	public boolean getOriginalHoatDong() {
		return _originalHoatDong;
	}

	@JSON
	@Override
	public Date getNgaySinh() {
		return _ngaySinh;
	}

	@Override
	public void setNgaySinh(Date ngaySinh) {
		_ngaySinh = ngaySinh;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			KhachHang.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KhachHang toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (KhachHang)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KhachHangImpl khachHangImpl = new KhachHangImpl();

		khachHangImpl.setKhachHangId(getKhachHangId());
		khachHangImpl.setCompanyId(getCompanyId());
		khachHangImpl.setUserId(getUserId());
		khachHangImpl.setUserName(getUserName());
		khachHangImpl.setCreateDate(getCreateDate());
		khachHangImpl.setModifiedDate(getModifiedDate());
		khachHangImpl.setTen(getTen());
		khachHangImpl.setNhomKhachHangId(getNhomKhachHangId());
		khachHangImpl.setMa(getMa());
		khachHangImpl.setDiaChi(getDiaChi());
		khachHangImpl.setDienThoai(getDienThoai());
		khachHangImpl.setEmail(getEmail());
		khachHangImpl.setFacebook(getFacebook());
		khachHangImpl.setTwitter(getTwitter());
		khachHangImpl.setSocialMedia1(getSocialMedia1());
		khachHangImpl.setSocialMedia2(getSocialMedia2());
		khachHangImpl.setSocialMedia3(getSocialMedia3());
		khachHangImpl.setTrangThai(getTrangThai());
		khachHangImpl.setDiemTichLuy(getDiemTichLuy());
		khachHangImpl.setMaSoThue(getMaSoThue());
		khachHangImpl.setHoatDong(getHoatDong());
		khachHangImpl.setNgaySinh(getNgaySinh());

		khachHangImpl.resetOriginalValues();

		return khachHangImpl;
	}

	@Override
	public int compareTo(KhachHang khachHang) {
		int value = 0;

		value = getTen().compareTo(khachHang.getTen());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KhachHang)) {
			return false;
		}

		KhachHang khachHang = (KhachHang)obj;

		long primaryKey = khachHang.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		KhachHangModelImpl khachHangModelImpl = this;

		khachHangModelImpl._originalTen = khachHangModelImpl._ten;

		khachHangModelImpl._originalNhomKhachHangId = khachHangModelImpl._nhomKhachHangId;

		khachHangModelImpl._setOriginalNhomKhachHangId = false;

		khachHangModelImpl._originalMa = khachHangModelImpl._ma;

		khachHangModelImpl._originalHoatDong = khachHangModelImpl._hoatDong;

		khachHangModelImpl._setOriginalHoatDong = false;

		khachHangModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<KhachHang> toCacheModel() {
		KhachHangCacheModel khachHangCacheModel = new KhachHangCacheModel();

		khachHangCacheModel.khachHangId = getKhachHangId();

		khachHangCacheModel.companyId = getCompanyId();

		khachHangCacheModel.userId = getUserId();

		khachHangCacheModel.userName = getUserName();

		String userName = khachHangCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			khachHangCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			khachHangCacheModel.createDate = createDate.getTime();
		}
		else {
			khachHangCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			khachHangCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			khachHangCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		khachHangCacheModel.ten = getTen();

		String ten = khachHangCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			khachHangCacheModel.ten = null;
		}

		khachHangCacheModel.nhomKhachHangId = getNhomKhachHangId();

		khachHangCacheModel.ma = getMa();

		String ma = khachHangCacheModel.ma;

		if ((ma != null) && (ma.length() == 0)) {
			khachHangCacheModel.ma = null;
		}

		khachHangCacheModel.diaChi = getDiaChi();

		String diaChi = khachHangCacheModel.diaChi;

		if ((diaChi != null) && (diaChi.length() == 0)) {
			khachHangCacheModel.diaChi = null;
		}

		khachHangCacheModel.dienThoai = getDienThoai();

		String dienThoai = khachHangCacheModel.dienThoai;

		if ((dienThoai != null) && (dienThoai.length() == 0)) {
			khachHangCacheModel.dienThoai = null;
		}

		khachHangCacheModel.email = getEmail();

		String email = khachHangCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			khachHangCacheModel.email = null;
		}

		khachHangCacheModel.facebook = getFacebook();

		String facebook = khachHangCacheModel.facebook;

		if ((facebook != null) && (facebook.length() == 0)) {
			khachHangCacheModel.facebook = null;
		}

		khachHangCacheModel.twitter = getTwitter();

		String twitter = khachHangCacheModel.twitter;

		if ((twitter != null) && (twitter.length() == 0)) {
			khachHangCacheModel.twitter = null;
		}

		khachHangCacheModel.socialMedia1 = getSocialMedia1();

		String socialMedia1 = khachHangCacheModel.socialMedia1;

		if ((socialMedia1 != null) && (socialMedia1.length() == 0)) {
			khachHangCacheModel.socialMedia1 = null;
		}

		khachHangCacheModel.socialMedia2 = getSocialMedia2();

		String socialMedia2 = khachHangCacheModel.socialMedia2;

		if ((socialMedia2 != null) && (socialMedia2.length() == 0)) {
			khachHangCacheModel.socialMedia2 = null;
		}

		khachHangCacheModel.socialMedia3 = getSocialMedia3();

		String socialMedia3 = khachHangCacheModel.socialMedia3;

		if ((socialMedia3 != null) && (socialMedia3.length() == 0)) {
			khachHangCacheModel.socialMedia3 = null;
		}

		khachHangCacheModel.trangThai = getTrangThai();

		khachHangCacheModel.diemTichLuy = getDiemTichLuy();

		khachHangCacheModel.maSoThue = getMaSoThue();

		String maSoThue = khachHangCacheModel.maSoThue;

		if ((maSoThue != null) && (maSoThue.length() == 0)) {
			khachHangCacheModel.maSoThue = null;
		}

		khachHangCacheModel.hoatDong = getHoatDong();

		Date ngaySinh = getNgaySinh();

		if (ngaySinh != null) {
			khachHangCacheModel.ngaySinh = ngaySinh.getTime();
		}
		else {
			khachHangCacheModel.ngaySinh = Long.MIN_VALUE;
		}

		return khachHangCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{khachHangId=");
		sb.append(getKhachHangId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", nhomKhachHangId=");
		sb.append(getNhomKhachHangId());
		sb.append(", ma=");
		sb.append(getMa());
		sb.append(", diaChi=");
		sb.append(getDiaChi());
		sb.append(", dienThoai=");
		sb.append(getDienThoai());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", facebook=");
		sb.append(getFacebook());
		sb.append(", twitter=");
		sb.append(getTwitter());
		sb.append(", socialMedia1=");
		sb.append(getSocialMedia1());
		sb.append(", socialMedia2=");
		sb.append(getSocialMedia2());
		sb.append(", socialMedia3=");
		sb.append(getSocialMedia3());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", diemTichLuy=");
		sb.append(getDiemTichLuy());
		sb.append(", maSoThue=");
		sb.append(getMaSoThue());
		sb.append(", hoatDong=");
		sb.append(getHoatDong());
		sb.append(", ngaySinh=");
		sb.append(getNgaySinh());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.khachhang.model.KhachHang");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>khachHangId</column-name><column-value><![CDATA[");
		sb.append(getKhachHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhomKhachHangId</column-name><column-value><![CDATA[");
		sb.append(getNhomKhachHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ma</column-name><column-value><![CDATA[");
		sb.append(getMa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaChi</column-name><column-value><![CDATA[");
		sb.append(getDiaChi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dienThoai</column-name><column-value><![CDATA[");
		sb.append(getDienThoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facebook</column-name><column-value><![CDATA[");
		sb.append(getFacebook());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitter</column-name><column-value><![CDATA[");
		sb.append(getTwitter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialMedia1</column-name><column-value><![CDATA[");
		sb.append(getSocialMedia1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialMedia2</column-name><column-value><![CDATA[");
		sb.append(getSocialMedia2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialMedia3</column-name><column-value><![CDATA[");
		sb.append(getSocialMedia3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diemTichLuy</column-name><column-value><![CDATA[");
		sb.append(getDiemTichLuy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maSoThue</column-name><column-value><![CDATA[");
		sb.append(getMaSoThue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoatDong</column-name><column-value><![CDATA[");
		sb.append(getHoatDong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngaySinh</column-name><column-value><![CDATA[");
		sb.append(getNgaySinh());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = KhachHang.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			KhachHang.class
		};
	private long _khachHangId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private String _originalTen;
	private long _nhomKhachHangId;
	private long _originalNhomKhachHangId;
	private boolean _setOriginalNhomKhachHangId;
	private String _ma;
	private String _originalMa;
	private String _diaChi;
	private String _dienThoai;
	private String _email;
	private String _facebook;
	private String _twitter;
	private String _socialMedia1;
	private String _socialMedia2;
	private String _socialMedia3;
	private int _trangThai;
	private int _diemTichLuy;
	private String _maSoThue;
	private boolean _hoatDong;
	private boolean _originalHoatDong;
	private boolean _setOriginalHoatDong;
	private Date _ngaySinh;
	private long _columnBitmask;
	private KhachHang _escapedModel;
}