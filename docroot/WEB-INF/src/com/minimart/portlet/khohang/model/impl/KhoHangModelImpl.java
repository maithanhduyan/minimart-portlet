/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.khohang.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.khohang.model.KhoHang;
import com.minimart.portlet.khohang.model.KhoHangModel;
import com.minimart.portlet.khohang.model.KhoHangSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the KhoHang service. Represents a row in the &quot;minimart_khohang&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.khohang.model.KhoHangModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KhoHangImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see KhoHangImpl
 * @see com.minimart.portlet.khohang.model.KhoHang
 * @see com.minimart.portlet.khohang.model.KhoHangModel
 * @generated
 */
@JSON(strict = true)
public class KhoHangModelImpl extends BaseModelImpl<KhoHang>
	implements KhoHangModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a kho hang model instance should use the {@link com.minimart.portlet.khohang.model.KhoHang} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_khohang";
	public static final Object[][] TABLE_COLUMNS = {
			{ "khoHangId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "trangThai", Types.BOOLEAN },
			{ "itemType", Types.INTEGER },
			{ "choPhepNhapKho", Types.BOOLEAN },
			{ "cuaHangId", Types.BIGINT },
			{ "autoId", Types.BIGINT },
			{ "sigmaId", Types.BIGINT },
			{ "ghiChu", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_khohang (khoHangId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,trangThai BOOLEAN,itemType INTEGER,choPhepNhapKho BOOLEAN,cuaHangId LONG,autoId LONG,sigmaId LONG,ghiChu VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table minimart_khohang";
	public static final String ORDER_BY_JPQL = " ORDER BY khoHang.ten ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_khohang.ten ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.khohang.model.KhoHang"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.khohang.model.KhoHang"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.khohang.model.KhoHang"),
			true);
	public static long TEN_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static KhoHang toModel(KhoHangSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		KhoHang model = new KhoHangImpl();

		model.setKhoHangId(soapModel.getKhoHangId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setTrangThai(soapModel.getTrangThai());
		model.setItemType(soapModel.getItemType());
		model.setChoPhepNhapKho(soapModel.getChoPhepNhapKho());
		model.setCuaHangId(soapModel.getCuaHangId());
		model.setAutoId(soapModel.getAutoId());
		model.setSigmaId(soapModel.getSigmaId());
		model.setGhiChu(soapModel.getGhiChu());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<KhoHang> toModels(KhoHangSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<KhoHang> models = new ArrayList<KhoHang>(soapModels.length);

		for (KhoHangSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.khohang.model.KhoHang"));

	public KhoHangModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _khoHangId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKhoHangId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _khoHangId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KhoHang.class;
	}

	@Override
	public String getModelClassName() {
		return KhoHang.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("khoHangId", getKhoHangId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("trangThai", getTrangThai());
		attributes.put("itemType", getItemType());
		attributes.put("choPhepNhapKho", getChoPhepNhapKho());
		attributes.put("cuaHangId", getCuaHangId());
		attributes.put("autoId", getAutoId());
		attributes.put("sigmaId", getSigmaId());
		attributes.put("ghiChu", getGhiChu());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long khoHangId = (Long)attributes.get("khoHangId");

		if (khoHangId != null) {
			setKhoHangId(khoHangId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		Boolean trangThai = (Boolean)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Integer itemType = (Integer)attributes.get("itemType");

		if (itemType != null) {
			setItemType(itemType);
		}

		Boolean choPhepNhapKho = (Boolean)attributes.get("choPhepNhapKho");

		if (choPhepNhapKho != null) {
			setChoPhepNhapKho(choPhepNhapKho);
		}

		Long cuaHangId = (Long)attributes.get("cuaHangId");

		if (cuaHangId != null) {
			setCuaHangId(cuaHangId);
		}

		Long autoId = (Long)attributes.get("autoId");

		if (autoId != null) {
			setAutoId(autoId);
		}

		Long sigmaId = (Long)attributes.get("sigmaId");

		if (sigmaId != null) {
			setSigmaId(sigmaId);
		}

		String ghiChu = (String)attributes.get("ghiChu");

		if (ghiChu != null) {
			setGhiChu(ghiChu);
		}
	}

	@JSON
	@Override
	public long getKhoHangId() {
		return _khoHangId;
	}

	@Override
	public void setKhoHangId(long khoHangId) {
		_khoHangId = khoHangId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_columnBitmask = -1L;

		if (_originalTen == null) {
			_originalTen = _ten;
		}

		_ten = ten;
	}

	public String getOriginalTen() {
		return GetterUtil.getString(_originalTen);
	}

	@JSON
	@Override
	public boolean getTrangThai() {
		return _trangThai;
	}

	@Override
	public boolean isTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(boolean trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public int getItemType() {
		return _itemType;
	}

	@Override
	public void setItemType(int itemType) {
		_itemType = itemType;
	}

	@JSON
	@Override
	public boolean getChoPhepNhapKho() {
		return _choPhepNhapKho;
	}

	@Override
	public boolean isChoPhepNhapKho() {
		return _choPhepNhapKho;
	}

	@Override
	public void setChoPhepNhapKho(boolean choPhepNhapKho) {
		_choPhepNhapKho = choPhepNhapKho;
	}

	@JSON
	@Override
	public long getCuaHangId() {
		return _cuaHangId;
	}

	@Override
	public void setCuaHangId(long cuaHangId) {
		_cuaHangId = cuaHangId;
	}

	@JSON
	@Override
	public long getAutoId() {
		return _autoId;
	}

	@Override
	public void setAutoId(long autoId) {
		_autoId = autoId;
	}

	@JSON
	@Override
	public long getSigmaId() {
		return _sigmaId;
	}

	@Override
	public void setSigmaId(long sigmaId) {
		_sigmaId = sigmaId;
	}

	@JSON
	@Override
	public String getGhiChu() {
		if (_ghiChu == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChu;
		}
	}

	@Override
	public void setGhiChu(String ghiChu) {
		_ghiChu = ghiChu;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			KhoHang.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KhoHang toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (KhoHang)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KhoHangImpl khoHangImpl = new KhoHangImpl();

		khoHangImpl.setKhoHangId(getKhoHangId());
		khoHangImpl.setCompanyId(getCompanyId());
		khoHangImpl.setUserId(getUserId());
		khoHangImpl.setUserName(getUserName());
		khoHangImpl.setCreateDate(getCreateDate());
		khoHangImpl.setModifiedDate(getModifiedDate());
		khoHangImpl.setTen(getTen());
		khoHangImpl.setTrangThai(getTrangThai());
		khoHangImpl.setItemType(getItemType());
		khoHangImpl.setChoPhepNhapKho(getChoPhepNhapKho());
		khoHangImpl.setCuaHangId(getCuaHangId());
		khoHangImpl.setAutoId(getAutoId());
		khoHangImpl.setSigmaId(getSigmaId());
		khoHangImpl.setGhiChu(getGhiChu());

		khoHangImpl.resetOriginalValues();

		return khoHangImpl;
	}

	@Override
	public int compareTo(KhoHang khoHang) {
		int value = 0;

		value = getTen().compareTo(khoHang.getTen());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KhoHang)) {
			return false;
		}

		KhoHang khoHang = (KhoHang)obj;

		long primaryKey = khoHang.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		KhoHangModelImpl khoHangModelImpl = this;

		khoHangModelImpl._originalTen = khoHangModelImpl._ten;

		khoHangModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<KhoHang> toCacheModel() {
		KhoHangCacheModel khoHangCacheModel = new KhoHangCacheModel();

		khoHangCacheModel.khoHangId = getKhoHangId();

		khoHangCacheModel.companyId = getCompanyId();

		khoHangCacheModel.userId = getUserId();

		khoHangCacheModel.userName = getUserName();

		String userName = khoHangCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			khoHangCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			khoHangCacheModel.createDate = createDate.getTime();
		}
		else {
			khoHangCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			khoHangCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			khoHangCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		khoHangCacheModel.ten = getTen();

		String ten = khoHangCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			khoHangCacheModel.ten = null;
		}

		khoHangCacheModel.trangThai = getTrangThai();

		khoHangCacheModel.itemType = getItemType();

		khoHangCacheModel.choPhepNhapKho = getChoPhepNhapKho();

		khoHangCacheModel.cuaHangId = getCuaHangId();

		khoHangCacheModel.autoId = getAutoId();

		khoHangCacheModel.sigmaId = getSigmaId();

		khoHangCacheModel.ghiChu = getGhiChu();

		String ghiChu = khoHangCacheModel.ghiChu;

		if ((ghiChu != null) && (ghiChu.length() == 0)) {
			khoHangCacheModel.ghiChu = null;
		}

		return khoHangCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{khoHangId=");
		sb.append(getKhoHangId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", itemType=");
		sb.append(getItemType());
		sb.append(", choPhepNhapKho=");
		sb.append(getChoPhepNhapKho());
		sb.append(", cuaHangId=");
		sb.append(getCuaHangId());
		sb.append(", autoId=");
		sb.append(getAutoId());
		sb.append(", sigmaId=");
		sb.append(getSigmaId());
		sb.append(", ghiChu=");
		sb.append(getGhiChu());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.khohang.model.KhoHang");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>khoHangId</column-name><column-value><![CDATA[");
		sb.append(getKhoHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemType</column-name><column-value><![CDATA[");
		sb.append(getItemType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>choPhepNhapKho</column-name><column-value><![CDATA[");
		sb.append(getChoPhepNhapKho());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cuaHangId</column-name><column-value><![CDATA[");
		sb.append(getCuaHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>autoId</column-name><column-value><![CDATA[");
		sb.append(getAutoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sigmaId</column-name><column-value><![CDATA[");
		sb.append(getSigmaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChu</column-name><column-value><![CDATA[");
		sb.append(getGhiChu());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = KhoHang.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			KhoHang.class
		};
	private long _khoHangId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private String _originalTen;
	private boolean _trangThai;
	private int _itemType;
	private boolean _choPhepNhapKho;
	private long _cuaHangId;
	private long _autoId;
	private long _sigmaId;
	private String _ghiChu;
	private long _columnBitmask;
	private KhoHang _escapedModel;
}