/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.cuahang.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.cuahang.model.TangCa;
import com.minimart.portlet.cuahang.model.TangCaModel;
import com.minimart.portlet.cuahang.model.TangCaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TangCa service. Represents a row in the &quot;minimart_tangca&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.cuahang.model.TangCaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TangCaImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see TangCaImpl
 * @see com.minimart.portlet.cuahang.model.TangCa
 * @see com.minimart.portlet.cuahang.model.TangCaModel
 * @generated
 */
@JSON(strict = true)
public class TangCaModelImpl extends BaseModelImpl<TangCa>
	implements TangCaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tang ca model instance should use the {@link com.minimart.portlet.cuahang.model.TangCa} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_tangca";
	public static final Object[][] TABLE_COLUMNS = {
			{ "tangCaId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "cuaHangId", Types.BIGINT },
			{ "caLamViecId", Types.BIGINT },
			{ "nhanVienId", Types.BIGINT },
			{ "tangCaTu", Types.TIMESTAMP },
			{ "tangCaDen", Types.TIMESTAMP },
			{ "hoatDong", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_tangca (tangCaId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,cuaHangId LONG,caLamViecId LONG,nhanVienId LONG,tangCaTu DATE null,tangCaDen DATE null,hoatDong BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table minimart_tangca";
	public static final String ORDER_BY_JPQL = " ORDER BY tangCa.ten ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_tangca.ten ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.cuahang.model.TangCa"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.cuahang.model.TangCa"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.cuahang.model.TangCa"),
			true);
	public static long CALAMVIECID_COLUMN_BITMASK = 1L;
	public static long CUAHANGID_COLUMN_BITMASK = 2L;
	public static long HOATDONG_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long TEN_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TangCa toModel(TangCaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TangCa model = new TangCaImpl();

		model.setTangCaId(soapModel.getTangCaId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setCuaHangId(soapModel.getCuaHangId());
		model.setCaLamViecId(soapModel.getCaLamViecId());
		model.setNhanVienId(soapModel.getNhanVienId());
		model.setTangCaTu(soapModel.getTangCaTu());
		model.setTangCaDen(soapModel.getTangCaDen());
		model.setHoatDong(soapModel.getHoatDong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TangCa> toModels(TangCaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TangCa> models = new ArrayList<TangCa>(soapModels.length);

		for (TangCaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.cuahang.model.TangCa"));

	public TangCaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tangCaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTangCaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tangCaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TangCa.class;
	}

	@Override
	public String getModelClassName() {
		return TangCa.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tangCaId", getTangCaId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("cuaHangId", getCuaHangId());
		attributes.put("caLamViecId", getCaLamViecId());
		attributes.put("nhanVienId", getNhanVienId());
		attributes.put("tangCaTu", getTangCaTu());
		attributes.put("tangCaDen", getTangCaDen());
		attributes.put("hoatDong", getHoatDong());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long tangCaId = (Long)attributes.get("tangCaId");

		if (tangCaId != null) {
			setTangCaId(tangCaId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		Long cuaHangId = (Long)attributes.get("cuaHangId");

		if (cuaHangId != null) {
			setCuaHangId(cuaHangId);
		}

		Long caLamViecId = (Long)attributes.get("caLamViecId");

		if (caLamViecId != null) {
			setCaLamViecId(caLamViecId);
		}

		Long nhanVienId = (Long)attributes.get("nhanVienId");

		if (nhanVienId != null) {
			setNhanVienId(nhanVienId);
		}

		Date tangCaTu = (Date)attributes.get("tangCaTu");

		if (tangCaTu != null) {
			setTangCaTu(tangCaTu);
		}

		Date tangCaDen = (Date)attributes.get("tangCaDen");

		if (tangCaDen != null) {
			setTangCaDen(tangCaDen);
		}

		Boolean hoatDong = (Boolean)attributes.get("hoatDong");

		if (hoatDong != null) {
			setHoatDong(hoatDong);
		}
	}

	@JSON
	@Override
	public long getTangCaId() {
		return _tangCaId;
	}

	@Override
	public void setTangCaId(long tangCaId) {
		_tangCaId = tangCaId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_columnBitmask = -1L;

		_ten = ten;
	}

	@JSON
	@Override
	public long getCuaHangId() {
		return _cuaHangId;
	}

	@Override
	public void setCuaHangId(long cuaHangId) {
		_columnBitmask |= CUAHANGID_COLUMN_BITMASK;

		if (!_setOriginalCuaHangId) {
			_setOriginalCuaHangId = true;

			_originalCuaHangId = _cuaHangId;
		}

		_cuaHangId = cuaHangId;
	}

	public long getOriginalCuaHangId() {
		return _originalCuaHangId;
	}

	@JSON
	@Override
	public long getCaLamViecId() {
		return _caLamViecId;
	}

	@Override
	public void setCaLamViecId(long caLamViecId) {
		_columnBitmask |= CALAMVIECID_COLUMN_BITMASK;

		if (!_setOriginalCaLamViecId) {
			_setOriginalCaLamViecId = true;

			_originalCaLamViecId = _caLamViecId;
		}

		_caLamViecId = caLamViecId;
	}

	public long getOriginalCaLamViecId() {
		return _originalCaLamViecId;
	}

	@JSON
	@Override
	public long getNhanVienId() {
		return _nhanVienId;
	}

	@Override
	public void setNhanVienId(long nhanVienId) {
		_nhanVienId = nhanVienId;
	}

	@JSON
	@Override
	public Date getTangCaTu() {
		return _tangCaTu;
	}

	@Override
	public void setTangCaTu(Date tangCaTu) {
		_tangCaTu = tangCaTu;
	}

	@JSON
	@Override
	public Date getTangCaDen() {
		return _tangCaDen;
	}

	@Override
	public void setTangCaDen(Date tangCaDen) {
		_tangCaDen = tangCaDen;
	}

	@JSON
	@Override
	public boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public boolean isHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(boolean hoatDong) {
		_columnBitmask |= HOATDONG_COLUMN_BITMASK;

		if (!_setOriginalHoatDong) {
			_setOriginalHoatDong = true;

			_originalHoatDong = _hoatDong;
		}

		_hoatDong = hoatDong;
	}

	public boolean getOriginalHoatDong() {
		return _originalHoatDong;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TangCa.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TangCa toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TangCa)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TangCaImpl tangCaImpl = new TangCaImpl();

		tangCaImpl.setTangCaId(getTangCaId());
		tangCaImpl.setCompanyId(getCompanyId());
		tangCaImpl.setUserId(getUserId());
		tangCaImpl.setUserName(getUserName());
		tangCaImpl.setCreateDate(getCreateDate());
		tangCaImpl.setModifiedDate(getModifiedDate());
		tangCaImpl.setTen(getTen());
		tangCaImpl.setCuaHangId(getCuaHangId());
		tangCaImpl.setCaLamViecId(getCaLamViecId());
		tangCaImpl.setNhanVienId(getNhanVienId());
		tangCaImpl.setTangCaTu(getTangCaTu());
		tangCaImpl.setTangCaDen(getTangCaDen());
		tangCaImpl.setHoatDong(getHoatDong());

		tangCaImpl.resetOriginalValues();

		return tangCaImpl;
	}

	@Override
	public int compareTo(TangCa tangCa) {
		int value = 0;

		value = getTen().compareTo(tangCa.getTen());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TangCa)) {
			return false;
		}

		TangCa tangCa = (TangCa)obj;

		long primaryKey = tangCa.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TangCaModelImpl tangCaModelImpl = this;

		tangCaModelImpl._originalUserId = tangCaModelImpl._userId;

		tangCaModelImpl._setOriginalUserId = false;

		tangCaModelImpl._originalCuaHangId = tangCaModelImpl._cuaHangId;

		tangCaModelImpl._setOriginalCuaHangId = false;

		tangCaModelImpl._originalCaLamViecId = tangCaModelImpl._caLamViecId;

		tangCaModelImpl._setOriginalCaLamViecId = false;

		tangCaModelImpl._originalHoatDong = tangCaModelImpl._hoatDong;

		tangCaModelImpl._setOriginalHoatDong = false;

		tangCaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TangCa> toCacheModel() {
		TangCaCacheModel tangCaCacheModel = new TangCaCacheModel();

		tangCaCacheModel.tangCaId = getTangCaId();

		tangCaCacheModel.companyId = getCompanyId();

		tangCaCacheModel.userId = getUserId();

		tangCaCacheModel.userName = getUserName();

		String userName = tangCaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tangCaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tangCaCacheModel.createDate = createDate.getTime();
		}
		else {
			tangCaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tangCaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			tangCaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		tangCaCacheModel.ten = getTen();

		String ten = tangCaCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			tangCaCacheModel.ten = null;
		}

		tangCaCacheModel.cuaHangId = getCuaHangId();

		tangCaCacheModel.caLamViecId = getCaLamViecId();

		tangCaCacheModel.nhanVienId = getNhanVienId();

		Date tangCaTu = getTangCaTu();

		if (tangCaTu != null) {
			tangCaCacheModel.tangCaTu = tangCaTu.getTime();
		}
		else {
			tangCaCacheModel.tangCaTu = Long.MIN_VALUE;
		}

		Date tangCaDen = getTangCaDen();

		if (tangCaDen != null) {
			tangCaCacheModel.tangCaDen = tangCaDen.getTime();
		}
		else {
			tangCaCacheModel.tangCaDen = Long.MIN_VALUE;
		}

		tangCaCacheModel.hoatDong = getHoatDong();

		return tangCaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{tangCaId=");
		sb.append(getTangCaId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", cuaHangId=");
		sb.append(getCuaHangId());
		sb.append(", caLamViecId=");
		sb.append(getCaLamViecId());
		sb.append(", nhanVienId=");
		sb.append(getNhanVienId());
		sb.append(", tangCaTu=");
		sb.append(getTangCaTu());
		sb.append(", tangCaDen=");
		sb.append(getTangCaDen());
		sb.append(", hoatDong=");
		sb.append(getHoatDong());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.cuahang.model.TangCa");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tangCaId</column-name><column-value><![CDATA[");
		sb.append(getTangCaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cuaHangId</column-name><column-value><![CDATA[");
		sb.append(getCuaHangId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>caLamViecId</column-name><column-value><![CDATA[");
		sb.append(getCaLamViecId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhanVienId</column-name><column-value><![CDATA[");
		sb.append(getNhanVienId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tangCaTu</column-name><column-value><![CDATA[");
		sb.append(getTangCaTu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tangCaDen</column-name><column-value><![CDATA[");
		sb.append(getTangCaDen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoatDong</column-name><column-value><![CDATA[");
		sb.append(getHoatDong());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TangCa.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { TangCa.class };
	private long _tangCaId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private long _cuaHangId;
	private long _originalCuaHangId;
	private boolean _setOriginalCuaHangId;
	private long _caLamViecId;
	private long _originalCaLamViecId;
	private boolean _setOriginalCaLamViecId;
	private long _nhanVienId;
	private Date _tangCaTu;
	private Date _tangCaDen;
	private boolean _hoatDong;
	private boolean _originalHoatDong;
	private boolean _setOriginalHoatDong;
	private long _columnBitmask;
	private TangCa _escapedModel;
}