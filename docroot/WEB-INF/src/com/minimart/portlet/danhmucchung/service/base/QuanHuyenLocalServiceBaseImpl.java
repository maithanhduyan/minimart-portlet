/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.danhmucchung.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.minimart.portlet.danhmucchung.model.QuanHuyen;
import com.minimart.portlet.danhmucchung.service.QuanHuyenLocalService;
import com.minimart.portlet.danhmucchung.service.persistence.DuongPersistence;
import com.minimart.portlet.danhmucchung.service.persistence.PhuongXaPersistence;
import com.minimart.portlet.danhmucchung.service.persistence.QuanHuyenPersistence;
import com.minimart.portlet.danhmucchung.service.persistence.TinhThanhPhoPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the quan huyen local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.minimart.portlet.danhmucchung.service.impl.QuanHuyenLocalServiceImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see com.minimart.portlet.danhmucchung.service.impl.QuanHuyenLocalServiceImpl
 * @see com.minimart.portlet.danhmucchung.service.QuanHuyenLocalServiceUtil
 * @generated
 */
public abstract class QuanHuyenLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements QuanHuyenLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.minimart.portlet.danhmucchung.service.QuanHuyenLocalServiceUtil} to access the quan huyen local service.
	 */

	/**
	 * Adds the quan huyen to the database. Also notifies the appropriate model listeners.
	 *
	 * @param quanHuyen the quan huyen
	 * @return the quan huyen that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public QuanHuyen addQuanHuyen(QuanHuyen quanHuyen)
		throws SystemException {
		quanHuyen.setNew(true);

		return quanHuyenPersistence.update(quanHuyen);
	}

	/**
	 * Creates a new quan huyen with the primary key. Does not add the quan huyen to the database.
	 *
	 * @param quanHuyenId the primary key for the new quan huyen
	 * @return the new quan huyen
	 */
	@Override
	public QuanHuyen createQuanHuyen(long quanHuyenId) {
		return quanHuyenPersistence.create(quanHuyenId);
	}

	/**
	 * Deletes the quan huyen with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param quanHuyenId the primary key of the quan huyen
	 * @return the quan huyen that was removed
	 * @throws PortalException if a quan huyen with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public QuanHuyen deleteQuanHuyen(long quanHuyenId)
		throws PortalException, SystemException {
		return quanHuyenPersistence.remove(quanHuyenId);
	}

	/**
	 * Deletes the quan huyen from the database. Also notifies the appropriate model listeners.
	 *
	 * @param quanHuyen the quan huyen
	 * @return the quan huyen that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public QuanHuyen deleteQuanHuyen(QuanHuyen quanHuyen)
		throws SystemException {
		return quanHuyenPersistence.remove(quanHuyen);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(QuanHuyen.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return quanHuyenPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.minimart.portlet.danhmucchung.model.impl.QuanHuyenModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return quanHuyenPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.minimart.portlet.danhmucchung.model.impl.QuanHuyenModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return quanHuyenPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return quanHuyenPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return quanHuyenPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public QuanHuyen fetchQuanHuyen(long quanHuyenId) throws SystemException {
		return quanHuyenPersistence.fetchByPrimaryKey(quanHuyenId);
	}

	/**
	 * Returns the quan huyen with the primary key.
	 *
	 * @param quanHuyenId the primary key of the quan huyen
	 * @return the quan huyen
	 * @throws PortalException if a quan huyen with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public QuanHuyen getQuanHuyen(long quanHuyenId)
		throws PortalException, SystemException {
		return quanHuyenPersistence.findByPrimaryKey(quanHuyenId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return quanHuyenPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the quan huyens.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.minimart.portlet.danhmucchung.model.impl.QuanHuyenModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of quan huyens
	 * @param end the upper bound of the range of quan huyens (not inclusive)
	 * @return the range of quan huyens
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<QuanHuyen> getQuanHuyens(int start, int end)
		throws SystemException {
		return quanHuyenPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of quan huyens.
	 *
	 * @return the number of quan huyens
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getQuanHuyensCount() throws SystemException {
		return quanHuyenPersistence.countAll();
	}

	/**
	 * Updates the quan huyen in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param quanHuyen the quan huyen
	 * @return the quan huyen that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public QuanHuyen updateQuanHuyen(QuanHuyen quanHuyen)
		throws SystemException {
		return quanHuyenPersistence.update(quanHuyen);
	}

	/**
	 * Returns the duong local service.
	 *
	 * @return the duong local service
	 */
	public com.minimart.portlet.danhmucchung.service.DuongLocalService getDuongLocalService() {
		return duongLocalService;
	}

	/**
	 * Sets the duong local service.
	 *
	 * @param duongLocalService the duong local service
	 */
	public void setDuongLocalService(
		com.minimart.portlet.danhmucchung.service.DuongLocalService duongLocalService) {
		this.duongLocalService = duongLocalService;
	}

	/**
	 * Returns the duong remote service.
	 *
	 * @return the duong remote service
	 */
	public com.minimart.portlet.danhmucchung.service.DuongService getDuongService() {
		return duongService;
	}

	/**
	 * Sets the duong remote service.
	 *
	 * @param duongService the duong remote service
	 */
	public void setDuongService(
		com.minimart.portlet.danhmucchung.service.DuongService duongService) {
		this.duongService = duongService;
	}

	/**
	 * Returns the duong persistence.
	 *
	 * @return the duong persistence
	 */
	public DuongPersistence getDuongPersistence() {
		return duongPersistence;
	}

	/**
	 * Sets the duong persistence.
	 *
	 * @param duongPersistence the duong persistence
	 */
	public void setDuongPersistence(DuongPersistence duongPersistence) {
		this.duongPersistence = duongPersistence;
	}

	/**
	 * Returns the phuong xa local service.
	 *
	 * @return the phuong xa local service
	 */
	public com.minimart.portlet.danhmucchung.service.PhuongXaLocalService getPhuongXaLocalService() {
		return phuongXaLocalService;
	}

	/**
	 * Sets the phuong xa local service.
	 *
	 * @param phuongXaLocalService the phuong xa local service
	 */
	public void setPhuongXaLocalService(
		com.minimart.portlet.danhmucchung.service.PhuongXaLocalService phuongXaLocalService) {
		this.phuongXaLocalService = phuongXaLocalService;
	}

	/**
	 * Returns the phuong xa remote service.
	 *
	 * @return the phuong xa remote service
	 */
	public com.minimart.portlet.danhmucchung.service.PhuongXaService getPhuongXaService() {
		return phuongXaService;
	}

	/**
	 * Sets the phuong xa remote service.
	 *
	 * @param phuongXaService the phuong xa remote service
	 */
	public void setPhuongXaService(
		com.minimart.portlet.danhmucchung.service.PhuongXaService phuongXaService) {
		this.phuongXaService = phuongXaService;
	}

	/**
	 * Returns the phuong xa persistence.
	 *
	 * @return the phuong xa persistence
	 */
	public PhuongXaPersistence getPhuongXaPersistence() {
		return phuongXaPersistence;
	}

	/**
	 * Sets the phuong xa persistence.
	 *
	 * @param phuongXaPersistence the phuong xa persistence
	 */
	public void setPhuongXaPersistence(PhuongXaPersistence phuongXaPersistence) {
		this.phuongXaPersistence = phuongXaPersistence;
	}

	/**
	 * Returns the quan huyen local service.
	 *
	 * @return the quan huyen local service
	 */
	public com.minimart.portlet.danhmucchung.service.QuanHuyenLocalService getQuanHuyenLocalService() {
		return quanHuyenLocalService;
	}

	/**
	 * Sets the quan huyen local service.
	 *
	 * @param quanHuyenLocalService the quan huyen local service
	 */
	public void setQuanHuyenLocalService(
		com.minimart.portlet.danhmucchung.service.QuanHuyenLocalService quanHuyenLocalService) {
		this.quanHuyenLocalService = quanHuyenLocalService;
	}

	/**
	 * Returns the quan huyen remote service.
	 *
	 * @return the quan huyen remote service
	 */
	public com.minimart.portlet.danhmucchung.service.QuanHuyenService getQuanHuyenService() {
		return quanHuyenService;
	}

	/**
	 * Sets the quan huyen remote service.
	 *
	 * @param quanHuyenService the quan huyen remote service
	 */
	public void setQuanHuyenService(
		com.minimart.portlet.danhmucchung.service.QuanHuyenService quanHuyenService) {
		this.quanHuyenService = quanHuyenService;
	}

	/**
	 * Returns the quan huyen persistence.
	 *
	 * @return the quan huyen persistence
	 */
	public QuanHuyenPersistence getQuanHuyenPersistence() {
		return quanHuyenPersistence;
	}

	/**
	 * Sets the quan huyen persistence.
	 *
	 * @param quanHuyenPersistence the quan huyen persistence
	 */
	public void setQuanHuyenPersistence(
		QuanHuyenPersistence quanHuyenPersistence) {
		this.quanHuyenPersistence = quanHuyenPersistence;
	}

	/**
	 * Returns the tinh thanh pho local service.
	 *
	 * @return the tinh thanh pho local service
	 */
	public com.minimart.portlet.danhmucchung.service.TinhThanhPhoLocalService getTinhThanhPhoLocalService() {
		return tinhThanhPhoLocalService;
	}

	/**
	 * Sets the tinh thanh pho local service.
	 *
	 * @param tinhThanhPhoLocalService the tinh thanh pho local service
	 */
	public void setTinhThanhPhoLocalService(
		com.minimart.portlet.danhmucchung.service.TinhThanhPhoLocalService tinhThanhPhoLocalService) {
		this.tinhThanhPhoLocalService = tinhThanhPhoLocalService;
	}

	/**
	 * Returns the tinh thanh pho remote service.
	 *
	 * @return the tinh thanh pho remote service
	 */
	public com.minimart.portlet.danhmucchung.service.TinhThanhPhoService getTinhThanhPhoService() {
		return tinhThanhPhoService;
	}

	/**
	 * Sets the tinh thanh pho remote service.
	 *
	 * @param tinhThanhPhoService the tinh thanh pho remote service
	 */
	public void setTinhThanhPhoService(
		com.minimart.portlet.danhmucchung.service.TinhThanhPhoService tinhThanhPhoService) {
		this.tinhThanhPhoService = tinhThanhPhoService;
	}

	/**
	 * Returns the tinh thanh pho persistence.
	 *
	 * @return the tinh thanh pho persistence
	 */
	public TinhThanhPhoPersistence getTinhThanhPhoPersistence() {
		return tinhThanhPhoPersistence;
	}

	/**
	 * Sets the tinh thanh pho persistence.
	 *
	 * @param tinhThanhPhoPersistence the tinh thanh pho persistence
	 */
	public void setTinhThanhPhoPersistence(
		TinhThanhPhoPersistence tinhThanhPhoPersistence) {
		this.tinhThanhPhoPersistence = tinhThanhPhoPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.minimart.portlet.danhmucchung.model.QuanHuyen",
			quanHuyenLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.minimart.portlet.danhmucchung.model.QuanHuyen");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return QuanHuyen.class;
	}

	protected String getModelClassName() {
		return QuanHuyen.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = quanHuyenPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.minimart.portlet.danhmucchung.service.DuongLocalService.class)
	protected com.minimart.portlet.danhmucchung.service.DuongLocalService duongLocalService;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.DuongService.class)
	protected com.minimart.portlet.danhmucchung.service.DuongService duongService;
	@BeanReference(type = DuongPersistence.class)
	protected DuongPersistence duongPersistence;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.PhuongXaLocalService.class)
	protected com.minimart.portlet.danhmucchung.service.PhuongXaLocalService phuongXaLocalService;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.PhuongXaService.class)
	protected com.minimart.portlet.danhmucchung.service.PhuongXaService phuongXaService;
	@BeanReference(type = PhuongXaPersistence.class)
	protected PhuongXaPersistence phuongXaPersistence;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.QuanHuyenLocalService.class)
	protected com.minimart.portlet.danhmucchung.service.QuanHuyenLocalService quanHuyenLocalService;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.QuanHuyenService.class)
	protected com.minimart.portlet.danhmucchung.service.QuanHuyenService quanHuyenService;
	@BeanReference(type = QuanHuyenPersistence.class)
	protected QuanHuyenPersistence quanHuyenPersistence;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.TinhThanhPhoLocalService.class)
	protected com.minimart.portlet.danhmucchung.service.TinhThanhPhoLocalService tinhThanhPhoLocalService;
	@BeanReference(type = com.minimart.portlet.danhmucchung.service.TinhThanhPhoService.class)
	protected com.minimart.portlet.danhmucchung.service.TinhThanhPhoService tinhThanhPhoService;
	@BeanReference(type = TinhThanhPhoPersistence.class)
	protected TinhThanhPhoPersistence tinhThanhPhoPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private QuanHuyenLocalServiceClpInvoker _clpInvoker = new QuanHuyenLocalServiceClpInvoker();
}