/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.nhanvien.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.nhanvien.model.NhanVien;
import com.minimart.portlet.nhanvien.model.NhanVienModel;
import com.minimart.portlet.nhanvien.model.NhanVienSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the NhanVien service. Represents a row in the &quot;minimart_nhanvien&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.nhanvien.model.NhanVienModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NhanVienImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see NhanVienImpl
 * @see com.minimart.portlet.nhanvien.model.NhanVien
 * @see com.minimart.portlet.nhanvien.model.NhanVienModel
 * @generated
 */
@JSON(strict = true)
public class NhanVienModelImpl extends BaseModelImpl<NhanVien>
	implements NhanVienModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a nhan vien model instance should use the {@link com.minimart.portlet.nhanvien.model.NhanVien} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_nhanvien";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "nhanVienId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "ho", Types.VARCHAR },
			{ "trangThai", Types.BOOLEAN },
			{ "nghiThu7", Types.BOOLEAN },
			{ "nghiChuNhat", Types.BOOLEAN },
			{ "cachTinhLuong", Types.INTEGER },
			{ "luongCa", Types.INTEGER },
			{ "luongThang", Types.INTEGER },
			{ "image", Types.VARCHAR },
			{ "diaChiId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_nhanvien (uuid_ VARCHAR(75) null,nhanVienId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,ho VARCHAR(75) null,trangThai BOOLEAN,nghiThu7 BOOLEAN,nghiChuNhat BOOLEAN,cachTinhLuong INTEGER,luongCa INTEGER,luongThang INTEGER,image VARCHAR(75) null,diaChiId LONG)";
	public static final String TABLE_SQL_DROP = "drop table minimart_nhanvien";
	public static final String ORDER_BY_JPQL = " ORDER BY nhanVien.ten ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_nhanvien.ten ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.nhanvien.model.NhanVien"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.nhanvien.model.NhanVien"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.nhanvien.model.NhanVien"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long HO_COLUMN_BITMASK = 2L;
	public static long NGHICHUNHAT_COLUMN_BITMASK = 4L;
	public static long NGHITHU7_COLUMN_BITMASK = 8L;
	public static long TEN_COLUMN_BITMASK = 16L;
	public static long TRANGTHAI_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static NhanVien toModel(NhanVienSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		NhanVien model = new NhanVienImpl();

		model.setUuid(soapModel.getUuid());
		model.setNhanVienId(soapModel.getNhanVienId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setHo(soapModel.getHo());
		model.setTrangThai(soapModel.getTrangThai());
		model.setNghiThu7(soapModel.getNghiThu7());
		model.setNghiChuNhat(soapModel.getNghiChuNhat());
		model.setCachTinhLuong(soapModel.getCachTinhLuong());
		model.setLuongCa(soapModel.getLuongCa());
		model.setLuongThang(soapModel.getLuongThang());
		model.setImage(soapModel.getImage());
		model.setDiaChiId(soapModel.getDiaChiId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<NhanVien> toModels(NhanVienSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<NhanVien> models = new ArrayList<NhanVien>(soapModels.length);

		for (NhanVienSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.nhanvien.model.NhanVien"));

	public NhanVienModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _nhanVienId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNhanVienId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _nhanVienId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NhanVien.class;
	}

	@Override
	public String getModelClassName() {
		return NhanVien.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("nhanVienId", getNhanVienId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("ho", getHo());
		attributes.put("trangThai", getTrangThai());
		attributes.put("nghiThu7", getNghiThu7());
		attributes.put("nghiChuNhat", getNghiChuNhat());
		attributes.put("cachTinhLuong", getCachTinhLuong());
		attributes.put("luongCa", getLuongCa());
		attributes.put("luongThang", getLuongThang());
		attributes.put("image", getImage());
		attributes.put("diaChiId", getDiaChiId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long nhanVienId = (Long)attributes.get("nhanVienId");

		if (nhanVienId != null) {
			setNhanVienId(nhanVienId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		String ho = (String)attributes.get("ho");

		if (ho != null) {
			setHo(ho);
		}

		Boolean trangThai = (Boolean)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Boolean nghiThu7 = (Boolean)attributes.get("nghiThu7");

		if (nghiThu7 != null) {
			setNghiThu7(nghiThu7);
		}

		Boolean nghiChuNhat = (Boolean)attributes.get("nghiChuNhat");

		if (nghiChuNhat != null) {
			setNghiChuNhat(nghiChuNhat);
		}

		Integer cachTinhLuong = (Integer)attributes.get("cachTinhLuong");

		if (cachTinhLuong != null) {
			setCachTinhLuong(cachTinhLuong);
		}

		Integer luongCa = (Integer)attributes.get("luongCa");

		if (luongCa != null) {
			setLuongCa(luongCa);
		}

		Integer luongThang = (Integer)attributes.get("luongThang");

		if (luongThang != null) {
			setLuongThang(luongThang);
		}

		String image = (String)attributes.get("image");

		if (image != null) {
			setImage(image);
		}

		Long diaChiId = (Long)attributes.get("diaChiId");

		if (diaChiId != null) {
			setDiaChiId(diaChiId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getNhanVienId() {
		return _nhanVienId;
	}

	@Override
	public void setNhanVienId(long nhanVienId) {
		_nhanVienId = nhanVienId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_columnBitmask = -1L;

		if (_originalTen == null) {
			_originalTen = _ten;
		}

		_ten = ten;
	}

	public String getOriginalTen() {
		return GetterUtil.getString(_originalTen);
	}

	@JSON
	@Override
	public String getHo() {
		if (_ho == null) {
			return StringPool.BLANK;
		}
		else {
			return _ho;
		}
	}

	@Override
	public void setHo(String ho) {
		_columnBitmask |= HO_COLUMN_BITMASK;

		if (_originalHo == null) {
			_originalHo = _ho;
		}

		_ho = ho;
	}

	public String getOriginalHo() {
		return GetterUtil.getString(_originalHo);
	}

	@JSON
	@Override
	public boolean getTrangThai() {
		return _trangThai;
	}

	@Override
	public boolean isTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(boolean trangThai) {
		_columnBitmask |= TRANGTHAI_COLUMN_BITMASK;

		if (!_setOriginalTrangThai) {
			_setOriginalTrangThai = true;

			_originalTrangThai = _trangThai;
		}

		_trangThai = trangThai;
	}

	public boolean getOriginalTrangThai() {
		return _originalTrangThai;
	}

	@JSON
	@Override
	public boolean getNghiThu7() {
		return _nghiThu7;
	}

	@Override
	public boolean isNghiThu7() {
		return _nghiThu7;
	}

	@Override
	public void setNghiThu7(boolean nghiThu7) {
		_columnBitmask |= NGHITHU7_COLUMN_BITMASK;

		if (!_setOriginalNghiThu7) {
			_setOriginalNghiThu7 = true;

			_originalNghiThu7 = _nghiThu7;
		}

		_nghiThu7 = nghiThu7;
	}

	public boolean getOriginalNghiThu7() {
		return _originalNghiThu7;
	}

	@JSON
	@Override
	public boolean getNghiChuNhat() {
		return _nghiChuNhat;
	}

	@Override
	public boolean isNghiChuNhat() {
		return _nghiChuNhat;
	}

	@Override
	public void setNghiChuNhat(boolean nghiChuNhat) {
		_columnBitmask |= NGHICHUNHAT_COLUMN_BITMASK;

		if (!_setOriginalNghiChuNhat) {
			_setOriginalNghiChuNhat = true;

			_originalNghiChuNhat = _nghiChuNhat;
		}

		_nghiChuNhat = nghiChuNhat;
	}

	public boolean getOriginalNghiChuNhat() {
		return _originalNghiChuNhat;
	}

	@JSON
	@Override
	public int getCachTinhLuong() {
		return _cachTinhLuong;
	}

	@Override
	public void setCachTinhLuong(int cachTinhLuong) {
		_cachTinhLuong = cachTinhLuong;
	}

	@JSON
	@Override
	public int getLuongCa() {
		return _luongCa;
	}

	@Override
	public void setLuongCa(int luongCa) {
		_luongCa = luongCa;
	}

	@JSON
	@Override
	public int getLuongThang() {
		return _luongThang;
	}

	@Override
	public void setLuongThang(int luongThang) {
		_luongThang = luongThang;
	}

	@JSON
	@Override
	public String getImage() {
		if (_image == null) {
			return StringPool.BLANK;
		}
		else {
			return _image;
		}
	}

	@Override
	public void setImage(String image) {
		_image = image;
	}

	@JSON
	@Override
	public long getDiaChiId() {
		return _diaChiId;
	}

	@Override
	public void setDiaChiId(long diaChiId) {
		_diaChiId = diaChiId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				NhanVien.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			NhanVien.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NhanVien toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (NhanVien)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NhanVienImpl nhanVienImpl = new NhanVienImpl();

		nhanVienImpl.setUuid(getUuid());
		nhanVienImpl.setNhanVienId(getNhanVienId());
		nhanVienImpl.setCompanyId(getCompanyId());
		nhanVienImpl.setUserId(getUserId());
		nhanVienImpl.setUserName(getUserName());
		nhanVienImpl.setCreateDate(getCreateDate());
		nhanVienImpl.setModifiedDate(getModifiedDate());
		nhanVienImpl.setTen(getTen());
		nhanVienImpl.setHo(getHo());
		nhanVienImpl.setTrangThai(getTrangThai());
		nhanVienImpl.setNghiThu7(getNghiThu7());
		nhanVienImpl.setNghiChuNhat(getNghiChuNhat());
		nhanVienImpl.setCachTinhLuong(getCachTinhLuong());
		nhanVienImpl.setLuongCa(getLuongCa());
		nhanVienImpl.setLuongThang(getLuongThang());
		nhanVienImpl.setImage(getImage());
		nhanVienImpl.setDiaChiId(getDiaChiId());

		nhanVienImpl.resetOriginalValues();

		return nhanVienImpl;
	}

	@Override
	public int compareTo(NhanVien nhanVien) {
		int value = 0;

		value = getTen().compareTo(nhanVien.getTen());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof NhanVien)) {
			return false;
		}

		NhanVien nhanVien = (NhanVien)obj;

		long primaryKey = nhanVien.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		NhanVienModelImpl nhanVienModelImpl = this;

		nhanVienModelImpl._originalUuid = nhanVienModelImpl._uuid;

		nhanVienModelImpl._originalCompanyId = nhanVienModelImpl._companyId;

		nhanVienModelImpl._setOriginalCompanyId = false;

		nhanVienModelImpl._originalTen = nhanVienModelImpl._ten;

		nhanVienModelImpl._originalHo = nhanVienModelImpl._ho;

		nhanVienModelImpl._originalTrangThai = nhanVienModelImpl._trangThai;

		nhanVienModelImpl._setOriginalTrangThai = false;

		nhanVienModelImpl._originalNghiThu7 = nhanVienModelImpl._nghiThu7;

		nhanVienModelImpl._setOriginalNghiThu7 = false;

		nhanVienModelImpl._originalNghiChuNhat = nhanVienModelImpl._nghiChuNhat;

		nhanVienModelImpl._setOriginalNghiChuNhat = false;

		nhanVienModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<NhanVien> toCacheModel() {
		NhanVienCacheModel nhanVienCacheModel = new NhanVienCacheModel();

		nhanVienCacheModel.uuid = getUuid();

		String uuid = nhanVienCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			nhanVienCacheModel.uuid = null;
		}

		nhanVienCacheModel.nhanVienId = getNhanVienId();

		nhanVienCacheModel.companyId = getCompanyId();

		nhanVienCacheModel.userId = getUserId();

		nhanVienCacheModel.userName = getUserName();

		String userName = nhanVienCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			nhanVienCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			nhanVienCacheModel.createDate = createDate.getTime();
		}
		else {
			nhanVienCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			nhanVienCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			nhanVienCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		nhanVienCacheModel.ten = getTen();

		String ten = nhanVienCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			nhanVienCacheModel.ten = null;
		}

		nhanVienCacheModel.ho = getHo();

		String ho = nhanVienCacheModel.ho;

		if ((ho != null) && (ho.length() == 0)) {
			nhanVienCacheModel.ho = null;
		}

		nhanVienCacheModel.trangThai = getTrangThai();

		nhanVienCacheModel.nghiThu7 = getNghiThu7();

		nhanVienCacheModel.nghiChuNhat = getNghiChuNhat();

		nhanVienCacheModel.cachTinhLuong = getCachTinhLuong();

		nhanVienCacheModel.luongCa = getLuongCa();

		nhanVienCacheModel.luongThang = getLuongThang();

		nhanVienCacheModel.image = getImage();

		String image = nhanVienCacheModel.image;

		if ((image != null) && (image.length() == 0)) {
			nhanVienCacheModel.image = null;
		}

		nhanVienCacheModel.diaChiId = getDiaChiId();

		return nhanVienCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", nhanVienId=");
		sb.append(getNhanVienId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", ho=");
		sb.append(getHo());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", nghiThu7=");
		sb.append(getNghiThu7());
		sb.append(", nghiChuNhat=");
		sb.append(getNghiChuNhat());
		sb.append(", cachTinhLuong=");
		sb.append(getCachTinhLuong());
		sb.append(", luongCa=");
		sb.append(getLuongCa());
		sb.append(", luongThang=");
		sb.append(getLuongThang());
		sb.append(", image=");
		sb.append(getImage());
		sb.append(", diaChiId=");
		sb.append(getDiaChiId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.nhanvien.model.NhanVien");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhanVienId</column-name><column-value><![CDATA[");
		sb.append(getNhanVienId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ho</column-name><column-value><![CDATA[");
		sb.append(getHo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nghiThu7</column-name><column-value><![CDATA[");
		sb.append(getNghiThu7());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nghiChuNhat</column-name><column-value><![CDATA[");
		sb.append(getNghiChuNhat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cachTinhLuong</column-name><column-value><![CDATA[");
		sb.append(getCachTinhLuong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luongCa</column-name><column-value><![CDATA[");
		sb.append(getLuongCa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luongThang</column-name><column-value><![CDATA[");
		sb.append(getLuongThang());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>image</column-name><column-value><![CDATA[");
		sb.append(getImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaChiId</column-name><column-value><![CDATA[");
		sb.append(getDiaChiId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = NhanVien.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			NhanVien.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _nhanVienId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private String _originalTen;
	private String _ho;
	private String _originalHo;
	private boolean _trangThai;
	private boolean _originalTrangThai;
	private boolean _setOriginalTrangThai;
	private boolean _nghiThu7;
	private boolean _originalNghiThu7;
	private boolean _setOriginalNghiThu7;
	private boolean _nghiChuNhat;
	private boolean _originalNghiChuNhat;
	private boolean _setOriginalNghiChuNhat;
	private int _cachTinhLuong;
	private int _luongCa;
	private int _luongThang;
	private String _image;
	private long _diaChiId;
	private long _columnBitmask;
	private NhanVien _escapedModel;
}