/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.minimart.portlet.nhacungcap.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.minimart.portlet.nhacungcap.model.NhaCungCap;
import com.minimart.portlet.nhacungcap.model.NhaCungCapModel;
import com.minimart.portlet.nhacungcap.model.NhaCungCapSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the NhaCungCap service. Represents a row in the &quot;minimart_nhacungcap&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.minimart.portlet.nhacungcap.model.NhaCungCapModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NhaCungCapImpl}.
 * </p>
 *
 * @author Mai Th√†nh Duy An
 * @see NhaCungCapImpl
 * @see com.minimart.portlet.nhacungcap.model.NhaCungCap
 * @see com.minimart.portlet.nhacungcap.model.NhaCungCapModel
 * @generated
 */
@JSON(strict = true)
public class NhaCungCapModelImpl extends BaseModelImpl<NhaCungCap>
	implements NhaCungCapModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a nha cung cap model instance should use the {@link com.minimart.portlet.nhacungcap.model.NhaCungCap} interface instead.
	 */
	public static final String TABLE_NAME = "minimart_nhacungcap";
	public static final Object[][] TABLE_COLUMNS = {
			{ "nhaCungCapId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "tenNhaCungCap", Types.VARCHAR },
			{ "nhomNhaCungCapId", Types.BIGINT },
			{ "maNhaCungCap", Types.VARCHAR },
			{ "diaChi", Types.VARCHAR },
			{ "dienThoai", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "website", Types.VARCHAR },
			{ "ghiChu", Types.VARCHAR },
			{ "hoatDong", Types.BOOLEAN },
			{ "doUuTien", Types.INTEGER },
			{ "logoURL", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table minimart_nhacungcap (nhaCungCapId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,tenNhaCungCap VARCHAR(75) null,nhomNhaCungCapId LONG,maNhaCungCap VARCHAR(75) null,diaChi VARCHAR(75) null,dienThoai VARCHAR(75) null,email VARCHAR(75) null,website VARCHAR(75) null,ghiChu VARCHAR(75) null,hoatDong BOOLEAN,doUuTien INTEGER,logoURL VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table minimart_nhacungcap";
	public static final String ORDER_BY_JPQL = " ORDER BY nhaCungCap.tenNhaCungCap ASC";
	public static final String ORDER_BY_SQL = " ORDER BY minimart_nhacungcap.tenNhaCungCap ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.minimart.portlet.nhacungcap.model.NhaCungCap"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.minimart.portlet.nhacungcap.model.NhaCungCap"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.minimart.portlet.nhacungcap.model.NhaCungCap"),
			true);
	public static long HOATDONG_COLUMN_BITMASK = 1L;
	public static long MANHACUNGCAP_COLUMN_BITMASK = 2L;
	public static long NHOMNHACUNGCAPID_COLUMN_BITMASK = 4L;
	public static long TENNHACUNGCAP_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static NhaCungCap toModel(NhaCungCapSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		NhaCungCap model = new NhaCungCapImpl();

		model.setNhaCungCapId(soapModel.getNhaCungCapId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTenNhaCungCap(soapModel.getTenNhaCungCap());
		model.setNhomNhaCungCapId(soapModel.getNhomNhaCungCapId());
		model.setMaNhaCungCap(soapModel.getMaNhaCungCap());
		model.setDiaChi(soapModel.getDiaChi());
		model.setDienThoai(soapModel.getDienThoai());
		model.setEmail(soapModel.getEmail());
		model.setWebsite(soapModel.getWebsite());
		model.setGhiChu(soapModel.getGhiChu());
		model.setHoatDong(soapModel.getHoatDong());
		model.setDoUuTien(soapModel.getDoUuTien());
		model.setLogoURL(soapModel.getLogoURL());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<NhaCungCap> toModels(NhaCungCapSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<NhaCungCap> models = new ArrayList<NhaCungCap>(soapModels.length);

		for (NhaCungCapSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.minimart.portlet.nhacungcap.model.NhaCungCap"));

	public NhaCungCapModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _nhaCungCapId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNhaCungCapId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _nhaCungCapId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NhaCungCap.class;
	}

	@Override
	public String getModelClassName() {
		return NhaCungCap.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("nhaCungCapId", getNhaCungCapId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("tenNhaCungCap", getTenNhaCungCap());
		attributes.put("nhomNhaCungCapId", getNhomNhaCungCapId());
		attributes.put("maNhaCungCap", getMaNhaCungCap());
		attributes.put("diaChi", getDiaChi());
		attributes.put("dienThoai", getDienThoai());
		attributes.put("email", getEmail());
		attributes.put("website", getWebsite());
		attributes.put("ghiChu", getGhiChu());
		attributes.put("hoatDong", getHoatDong());
		attributes.put("doUuTien", getDoUuTien());
		attributes.put("logoURL", getLogoURL());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long nhaCungCapId = (Long)attributes.get("nhaCungCapId");

		if (nhaCungCapId != null) {
			setNhaCungCapId(nhaCungCapId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String tenNhaCungCap = (String)attributes.get("tenNhaCungCap");

		if (tenNhaCungCap != null) {
			setTenNhaCungCap(tenNhaCungCap);
		}

		Long nhomNhaCungCapId = (Long)attributes.get("nhomNhaCungCapId");

		if (nhomNhaCungCapId != null) {
			setNhomNhaCungCapId(nhomNhaCungCapId);
		}

		String maNhaCungCap = (String)attributes.get("maNhaCungCap");

		if (maNhaCungCap != null) {
			setMaNhaCungCap(maNhaCungCap);
		}

		String diaChi = (String)attributes.get("diaChi");

		if (diaChi != null) {
			setDiaChi(diaChi);
		}

		String dienThoai = (String)attributes.get("dienThoai");

		if (dienThoai != null) {
			setDienThoai(dienThoai);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String website = (String)attributes.get("website");

		if (website != null) {
			setWebsite(website);
		}

		String ghiChu = (String)attributes.get("ghiChu");

		if (ghiChu != null) {
			setGhiChu(ghiChu);
		}

		Boolean hoatDong = (Boolean)attributes.get("hoatDong");

		if (hoatDong != null) {
			setHoatDong(hoatDong);
		}

		Integer doUuTien = (Integer)attributes.get("doUuTien");

		if (doUuTien != null) {
			setDoUuTien(doUuTien);
		}

		String logoURL = (String)attributes.get("logoURL");

		if (logoURL != null) {
			setLogoURL(logoURL);
		}
	}

	@JSON
	@Override
	public long getNhaCungCapId() {
		return _nhaCungCapId;
	}

	@Override
	public void setNhaCungCapId(long nhaCungCapId) {
		_nhaCungCapId = nhaCungCapId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTenNhaCungCap() {
		if (_tenNhaCungCap == null) {
			return StringPool.BLANK;
		}
		else {
			return _tenNhaCungCap;
		}
	}

	@Override
	public void setTenNhaCungCap(String tenNhaCungCap) {
		_columnBitmask = -1L;

		if (_originalTenNhaCungCap == null) {
			_originalTenNhaCungCap = _tenNhaCungCap;
		}

		_tenNhaCungCap = tenNhaCungCap;
	}

	public String getOriginalTenNhaCungCap() {
		return GetterUtil.getString(_originalTenNhaCungCap);
	}

	@JSON
	@Override
	public long getNhomNhaCungCapId() {
		return _nhomNhaCungCapId;
	}

	@Override
	public void setNhomNhaCungCapId(long nhomNhaCungCapId) {
		_columnBitmask |= NHOMNHACUNGCAPID_COLUMN_BITMASK;

		if (!_setOriginalNhomNhaCungCapId) {
			_setOriginalNhomNhaCungCapId = true;

			_originalNhomNhaCungCapId = _nhomNhaCungCapId;
		}

		_nhomNhaCungCapId = nhomNhaCungCapId;
	}

	public long getOriginalNhomNhaCungCapId() {
		return _originalNhomNhaCungCapId;
	}

	@JSON
	@Override
	public String getMaNhaCungCap() {
		if (_maNhaCungCap == null) {
			return StringPool.BLANK;
		}
		else {
			return _maNhaCungCap;
		}
	}

	@Override
	public void setMaNhaCungCap(String maNhaCungCap) {
		_columnBitmask |= MANHACUNGCAP_COLUMN_BITMASK;

		if (_originalMaNhaCungCap == null) {
			_originalMaNhaCungCap = _maNhaCungCap;
		}

		_maNhaCungCap = maNhaCungCap;
	}

	public String getOriginalMaNhaCungCap() {
		return GetterUtil.getString(_originalMaNhaCungCap);
	}

	@JSON
	@Override
	public String getDiaChi() {
		if (_diaChi == null) {
			return StringPool.BLANK;
		}
		else {
			return _diaChi;
		}
	}

	@Override
	public void setDiaChi(String diaChi) {
		_diaChi = diaChi;
	}

	@JSON
	@Override
	public String getDienThoai() {
		if (_dienThoai == null) {
			return StringPool.BLANK;
		}
		else {
			return _dienThoai;
		}
	}

	@Override
	public void setDienThoai(String dienThoai) {
		_dienThoai = dienThoai;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getWebsite() {
		if (_website == null) {
			return StringPool.BLANK;
		}
		else {
			return _website;
		}
	}

	@Override
	public void setWebsite(String website) {
		_website = website;
	}

	@JSON
	@Override
	public String getGhiChu() {
		if (_ghiChu == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChu;
		}
	}

	@Override
	public void setGhiChu(String ghiChu) {
		_ghiChu = ghiChu;
	}

	@JSON
	@Override
	public boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public boolean isHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(boolean hoatDong) {
		_columnBitmask |= HOATDONG_COLUMN_BITMASK;

		if (!_setOriginalHoatDong) {
			_setOriginalHoatDong = true;

			_originalHoatDong = _hoatDong;
		}

		_hoatDong = hoatDong;
	}

	public boolean getOriginalHoatDong() {
		return _originalHoatDong;
	}

	@JSON
	@Override
	public int getDoUuTien() {
		return _doUuTien;
	}

	@Override
	public void setDoUuTien(int doUuTien) {
		_doUuTien = doUuTien;
	}

	@JSON
	@Override
	public String getLogoURL() {
		if (_logoURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _logoURL;
		}
	}

	@Override
	public void setLogoURL(String logoURL) {
		_logoURL = logoURL;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			NhaCungCap.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NhaCungCap toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (NhaCungCap)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NhaCungCapImpl nhaCungCapImpl = new NhaCungCapImpl();

		nhaCungCapImpl.setNhaCungCapId(getNhaCungCapId());
		nhaCungCapImpl.setCompanyId(getCompanyId());
		nhaCungCapImpl.setUserId(getUserId());
		nhaCungCapImpl.setUserName(getUserName());
		nhaCungCapImpl.setCreateDate(getCreateDate());
		nhaCungCapImpl.setModifiedDate(getModifiedDate());
		nhaCungCapImpl.setTenNhaCungCap(getTenNhaCungCap());
		nhaCungCapImpl.setNhomNhaCungCapId(getNhomNhaCungCapId());
		nhaCungCapImpl.setMaNhaCungCap(getMaNhaCungCap());
		nhaCungCapImpl.setDiaChi(getDiaChi());
		nhaCungCapImpl.setDienThoai(getDienThoai());
		nhaCungCapImpl.setEmail(getEmail());
		nhaCungCapImpl.setWebsite(getWebsite());
		nhaCungCapImpl.setGhiChu(getGhiChu());
		nhaCungCapImpl.setHoatDong(getHoatDong());
		nhaCungCapImpl.setDoUuTien(getDoUuTien());
		nhaCungCapImpl.setLogoURL(getLogoURL());

		nhaCungCapImpl.resetOriginalValues();

		return nhaCungCapImpl;
	}

	@Override
	public int compareTo(NhaCungCap nhaCungCap) {
		int value = 0;

		value = getTenNhaCungCap().compareTo(nhaCungCap.getTenNhaCungCap());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof NhaCungCap)) {
			return false;
		}

		NhaCungCap nhaCungCap = (NhaCungCap)obj;

		long primaryKey = nhaCungCap.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		NhaCungCapModelImpl nhaCungCapModelImpl = this;

		nhaCungCapModelImpl._originalTenNhaCungCap = nhaCungCapModelImpl._tenNhaCungCap;

		nhaCungCapModelImpl._originalNhomNhaCungCapId = nhaCungCapModelImpl._nhomNhaCungCapId;

		nhaCungCapModelImpl._setOriginalNhomNhaCungCapId = false;

		nhaCungCapModelImpl._originalMaNhaCungCap = nhaCungCapModelImpl._maNhaCungCap;

		nhaCungCapModelImpl._originalHoatDong = nhaCungCapModelImpl._hoatDong;

		nhaCungCapModelImpl._setOriginalHoatDong = false;

		nhaCungCapModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<NhaCungCap> toCacheModel() {
		NhaCungCapCacheModel nhaCungCapCacheModel = new NhaCungCapCacheModel();

		nhaCungCapCacheModel.nhaCungCapId = getNhaCungCapId();

		nhaCungCapCacheModel.companyId = getCompanyId();

		nhaCungCapCacheModel.userId = getUserId();

		nhaCungCapCacheModel.userName = getUserName();

		String userName = nhaCungCapCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			nhaCungCapCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			nhaCungCapCacheModel.createDate = createDate.getTime();
		}
		else {
			nhaCungCapCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			nhaCungCapCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			nhaCungCapCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		nhaCungCapCacheModel.tenNhaCungCap = getTenNhaCungCap();

		String tenNhaCungCap = nhaCungCapCacheModel.tenNhaCungCap;

		if ((tenNhaCungCap != null) && (tenNhaCungCap.length() == 0)) {
			nhaCungCapCacheModel.tenNhaCungCap = null;
		}

		nhaCungCapCacheModel.nhomNhaCungCapId = getNhomNhaCungCapId();

		nhaCungCapCacheModel.maNhaCungCap = getMaNhaCungCap();

		String maNhaCungCap = nhaCungCapCacheModel.maNhaCungCap;

		if ((maNhaCungCap != null) && (maNhaCungCap.length() == 0)) {
			nhaCungCapCacheModel.maNhaCungCap = null;
		}

		nhaCungCapCacheModel.diaChi = getDiaChi();

		String diaChi = nhaCungCapCacheModel.diaChi;

		if ((diaChi != null) && (diaChi.length() == 0)) {
			nhaCungCapCacheModel.diaChi = null;
		}

		nhaCungCapCacheModel.dienThoai = getDienThoai();

		String dienThoai = nhaCungCapCacheModel.dienThoai;

		if ((dienThoai != null) && (dienThoai.length() == 0)) {
			nhaCungCapCacheModel.dienThoai = null;
		}

		nhaCungCapCacheModel.email = getEmail();

		String email = nhaCungCapCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			nhaCungCapCacheModel.email = null;
		}

		nhaCungCapCacheModel.website = getWebsite();

		String website = nhaCungCapCacheModel.website;

		if ((website != null) && (website.length() == 0)) {
			nhaCungCapCacheModel.website = null;
		}

		nhaCungCapCacheModel.ghiChu = getGhiChu();

		String ghiChu = nhaCungCapCacheModel.ghiChu;

		if ((ghiChu != null) && (ghiChu.length() == 0)) {
			nhaCungCapCacheModel.ghiChu = null;
		}

		nhaCungCapCacheModel.hoatDong = getHoatDong();

		nhaCungCapCacheModel.doUuTien = getDoUuTien();

		nhaCungCapCacheModel.logoURL = getLogoURL();

		String logoURL = nhaCungCapCacheModel.logoURL;

		if ((logoURL != null) && (logoURL.length() == 0)) {
			nhaCungCapCacheModel.logoURL = null;
		}

		return nhaCungCapCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{nhaCungCapId=");
		sb.append(getNhaCungCapId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", tenNhaCungCap=");
		sb.append(getTenNhaCungCap());
		sb.append(", nhomNhaCungCapId=");
		sb.append(getNhomNhaCungCapId());
		sb.append(", maNhaCungCap=");
		sb.append(getMaNhaCungCap());
		sb.append(", diaChi=");
		sb.append(getDiaChi());
		sb.append(", dienThoai=");
		sb.append(getDienThoai());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", website=");
		sb.append(getWebsite());
		sb.append(", ghiChu=");
		sb.append(getGhiChu());
		sb.append(", hoatDong=");
		sb.append(getHoatDong());
		sb.append(", doUuTien=");
		sb.append(getDoUuTien());
		sb.append(", logoURL=");
		sb.append(getLogoURL());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.minimart.portlet.nhacungcap.model.NhaCungCap");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>nhaCungCapId</column-name><column-value><![CDATA[");
		sb.append(getNhaCungCapId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenNhaCungCap</column-name><column-value><![CDATA[");
		sb.append(getTenNhaCungCap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhomNhaCungCapId</column-name><column-value><![CDATA[");
		sb.append(getNhomNhaCungCapId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maNhaCungCap</column-name><column-value><![CDATA[");
		sb.append(getMaNhaCungCap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaChi</column-name><column-value><![CDATA[");
		sb.append(getDiaChi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dienThoai</column-name><column-value><![CDATA[");
		sb.append(getDienThoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>website</column-name><column-value><![CDATA[");
		sb.append(getWebsite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChu</column-name><column-value><![CDATA[");
		sb.append(getGhiChu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoatDong</column-name><column-value><![CDATA[");
		sb.append(getHoatDong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doUuTien</column-name><column-value><![CDATA[");
		sb.append(getDoUuTien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>logoURL</column-name><column-value><![CDATA[");
		sb.append(getLogoURL());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = NhaCungCap.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			NhaCungCap.class
		};
	private long _nhaCungCapId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _tenNhaCungCap;
	private String _originalTenNhaCungCap;
	private long _nhomNhaCungCapId;
	private long _originalNhomNhaCungCapId;
	private boolean _setOriginalNhomNhaCungCapId;
	private String _maNhaCungCap;
	private String _originalMaNhaCungCap;
	private String _diaChi;
	private String _dienThoai;
	private String _email;
	private String _website;
	private String _ghiChu;
	private boolean _hoatDong;
	private boolean _originalHoatDong;
	private boolean _setOriginalHoatDong;
	private int _doUuTien;
	private String _logoURL;
	private long _columnBitmask;
	private NhaCungCap _escapedModel;
}